.. _bicenter:

BICENTER 自由报表帮助手册
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
第1章	部署环境
-------------------
本章主要介绍BI-CENTER综合仪表板部署适用的软硬件环境。确保你拥有最低的硬件、软件配置。

:硬件服务器:
* 处理器：最低为Intel Pentium 或兼容133 MHz 的处理器。推荐Intel Xeon 2.4GHz双CPU多核或者更快的处理器。
* 内存：建议至少配置2G RAM；推荐4GB以上。
* 磁盘空间：200M以上空间。
* 显示器：VGA 或更高分辨率的监视器，最低分辨率1024*768。
性能会随着服务器配置（如CPU、内存等）的提高而有较大提升

:软件环境:
* 支持的操作系统：
	* Windows Server 2003 Enterprise以上
	* Enterprise Linux （core-3.0 以上）
* 应用服务器:
	* Tomcat 6以上
	* JBOSS 4.2
	* Bea WebLogic 9.X
	* WebSphere 6.1
* 服务器Java版本：需要JDK1.5.06以上。
* 客户端浏览器：IE6 sp3以上，IE7，IE8，IE9。
* 数据库服务器：
	* Oracle 
	* MS SQL Server 
	* Teradata
	* DB2
	* Informix
	* Sybase
	* MySQL

第2章	表样定义四步骤
-------------------------
报表定义文件为二进制Excel文件，以xls或xlsx为后缀名。文件名不应包含中文字符。
在一个Excel报表表样定义里, ``基本要求/查询定义/查询条件/define/其它设置/打印设置/chart /引用报表定义/存储定义``   
其中 ``“基本要求”，“查询定义”，“查询条件”，“define”`` 标签页是必须存在的

2.1	报表文件标签页说明
~~~~~~~~~~~~~~~~~~~~~~~~~~~
报表文件标签页说明列表如下:	
	* 基本要求:	必填,定义报表的基本属性（如温馨提示的内容），按模板填写
	* 查询定义:	必填,定义SQL查询
	* 查询条件:	必填,定义报表的查询参数及录入界面布局
	* define(表样定义)：必填,定义表样及填数规则
	* 其它设置：选填,控制报表在界面显示效果和缓存等信息
	* 打印设置：选填,定义打印（导出PDF）的缺省字体、纸张类型等
	* chart(图形定义):选填,使用图表时定义
	* 引用报表定义：选填,引用其他报表单元格时使用
	* 存储定义：选填,有补录需求的报表，定义如何在数据库中存储补录数据
	* 套表目录：选填,在做套表的时候需要用此页签代替define
	* 校验规则：选填,和套表目录同时定义，配合使用
下面我们将逐一介绍标签页的具体用法

2.2	基本要求 
~~~~~~~~~~~~~~~~~~~~~~~~~~~
 .. image :: _static/images/bicenter/2.2.1.png 
在基本要求的标签页中，“业务说明”栏中有文字内容时，显示界面上的条件录入区左下角会出现信息图标，鼠标点击后，会显示该报表在基本要求标签页中“业务说明”中的内容。如某张报表的基本要求中业务说明如下:
 .. image :: _static/images/bicenter/2.2.2.png
界面上有一个感叹号的图标，鼠标悬浮其上查看报表的业务说明:
 .. image :: _static/images/bicenter/2.2.3.png

2.3	查询条件
~~~~~~~~~~~~~~~~~~~~~~~~~~~
一个查询条件标签页的基本格式如图：
 .. image :: _static/images/bicenter/2.3.1.png

2.3.1	界面布局
..................
 .. image :: _static/images/bicenter/2.3.1.1.png
“界面布局”用来指定用户在查看报表时页面上选择的查询条件。
“界面布局”合并单元格的个数必须大于等于下面显示的参数个数，如果合并的单元格个数小于参数个数，超出的参数在页面上显示无法控制。参数可以分行显现，从左至右依次自动排列。如下图。例：
 .. image :: _static/images/bicenter/2.3.1.2.png
界面效果：
 .. image :: _static/images/bicenter/2.3.1.3.png
 
2.3.2	条件名称
...................
页面布局和条件名称的参数名必须唯一对应。页面布局下的参数必须在报表条件名称下有定义，才能引用，否则读表样出错。条件名称的顺序没有严格要求。

2.3.3	用法
..................
用法有三种取值：查询条件、数据转换和录入校验。该列为选填项，可以直接删除或者不填，当它缺省时，默认表示该参数用法是查询条件。

2.3.3.1	单位转换
'''''''''''''''''''''''
用作数据转换的查询参数，仅用于实现数据转换，如单位转换，它们对应的报表都是同一份数据。如：某报表的数据在数据库中都是以元为单位，而用户希望同时看到以万元为单位的报表。这里，无论下拉框以元为单位，还是以万元为单位，我们对应的都是同一份以元为单位的数据，只是我们以万元为单位时，所有数据乘上了一个转换因子（对万元而言，我们乘了0.0001）。在“取值范围”列，数据转换的转换因子，按“显示名（转换因子）”的语法定义。例：
 .. image :: _static/images/bicenter/2.3.3.1.1.png
单位转换可以和数据精度结合起来用，实现用单位控制小数位数。
 .. image :: _static/images/bicenter/2.3.1.1.2.png
在数据精度的默认值引用单位的变量名，接着单位的取值范围设置每个单元保留位数即可。如上图的：元(1.00)，代表选择元时，默认保留两位小数。

2.3.3.2	录入校验
'''''''''''''''''''''''''
用作录入校验时，可不填写变量名， 在“取值范围”列，需要填写录入有效性验证的布尔表达式，在“默认值”列填写有效性验证失败时的提示信息。
目前只支持calendar时间控件和text控件的录入校验。如图：
 .. image :: _static/images/bicenter/2.3.3.2.1.png
要实现录入校验，只需填四列：

	* 条件名称:	填写校验名称（不能重名）
	* 用法:填写“录入校验”
	* 默认值:填写验证失败时系统的提示信息
	* 取值范围:	填写用于录入校验规则的布尔表达式

:支持如下函数:
* ${DATEDIFF("day",var.day1,var.day)<100} ：表示以天为单位的变量 day1 与 day的差，变量day1和day应为Date 类型。
* !ISBLANK(var.hy)：变量hy是否为空。
* ${var.as-var.ss<20}：变量as和ss的差不能大于20。
上图在实际应用的实例：
不满足条件时，就会出现下图情况，红色字体即是在默认值中填写的内容
 .. image :: _static/images/bicenter/2.3.3.2.2.png
在所有条件满足时,才会执行查询。

2.3.4	变量名
..................
必须填写，用户录入的参数，可通过“${var.变量名}”方式在报表上下文中引用。
 如在查询定义中的SQL使用::

SELECT SUM(RKSE) AS Z,HY_DM FROM CDQ_RKSK WHERE FSRQ='${var.day}'  GROUP BY  HY_DM

-- 注意，变量名不能为下列名称（大小写不敏感) ``code、op、today、rundate、type`` 

2.3.5	取值范围
..................
 .. image :: _static/images/bicenter/2.3.5.1.png
自由报表提供几种取值方法：静态取值，动态Java类调用取值，select语句取值，预定义层次维度，预定义字典设置和预定义OLAP维度层次。

2.3.5.1	静态取值
'''''''''''''''''''''''''''''''''''
静态取值是控制输入参数值的范围。有以下几种方法:
* 罗列法
以“显示值1（值1），显示值2（值2）……”方式，将备选项罗列在取值范围单元格。若显示值与值相同，则可直接以“值1，值2……”方式填写。如下图：
 .. image :: _static/images/bicenter/2.3.5.1.1.png
* 范围法
以“起始值，截止值” 格式限制该参数的取数范围。如下图显示的报表日期就是用范围法取的值。在取值范围内填写的是“20100331，20130331”,由于该参数表示的是日期，则它的取值范围是2010年3月31日到2013年3月31日。该方法一般用于datepicker和Calendar录入控件。
 .. image :: _static/images/bicenter/2.3.5.1.2.png
* 参数调用法
这种方法是通过调用其它参数来实现自身参数的取值。该方法一般用于datepicker控件。倘若在界面上定义两个参数：起始日期和截至日期，为了保证截止日期大于等于起始日期就会用到这种方法。
 .. image :: _static/images/bicenter/2.3.5.1.3.png
在起始时间的取值范围中，引用了截止时间变量：eday。它的取值范围就是1997年1月1日到截止时间的最后一天。
在截止时间的取值范围中，引用了两个参数：sday和today(“-12y”)，表示的是它的取值范围是sday的第一天即是1997年1月1日到today(“-12y”)这一天。由于today(“-12y”)表示是12年前的日期，假设今天是2012年11月7日，则today(“-12y”)就是2000年11月7日。则截止时间的可选值范围在1997年1月1日到2000年11月7日里，起始时间的可选值范围在1997年1月1日到2000年11月7日里。
由于在开始时间中引用了截止时间参数，如果改变截止时间使之小于起始时间时，开始时间就会自动调节其值与截止时间一致。由于在截止时间中引用了开始时间，当改变开始时间使之大于截止时间时，截止时间也会自动调节其值与开始时间相同。假设在界面显示如下：
 .. image :: _static/images/bicenter/2.3.5.1.4.png
如果将截止日期选为1997年11月30日，起始时间会自动变化，如界面下图所示：
 .. image :: _static/images/bicenter/2.3.5.1.5.png 
 
2.3.5.2	动态Java类调用取值
'''''''''''''''''''''''''''''''''''
可以调用一个发布在bicenter包中的java静态类方法，来提供下拉选择框的备选项
:java类需符合如下规范:
* 必须是com.dc.包下面的类
* 必须是静态方法
* 方法签名必须如下：SelectableValue[] method(HttpServletRequest request, String param1, String param2……)
SelectableValue是bicenter内部定义的一个类，可直接引用，字符串参数数量不限。使用时，将对该方法的调用语句填写到“取值范围”单元格中，其中，request参数需略去，直接传入字符串参数，这些参数可为常量，也可使用”$变量名”语法引用报表上下文的变量。如：com.dc.bicenter.BranchProvider.getBranches($报表粒度)，该写法调用的是 com.dc.bicenter.BranchProvider 类中的如下方法：
Public static SelectableValue[] getBranches(HttpServletRequest request, String baobiaolidu)
实例如取值范围：
 .. image :: _static/images/bicenter/2.3.5.2.1.png
自定义方法在如果注册了，直接在报表使用eel表达式调用: ``${方法名 ()}`` 

2.3.5.3	select语句
'''''''''''''''''''''''''''''''''''
可以通过一个select语句定义下拉选择框的备选项，要求select语句具备如下规范::

	 Select  caption, value from … where …

即：返回数据集中，每行含两列数据，其中，第一列为显示值，第二列为值，每行数据代表一个备选项。
Select语句统一在“查询定义”标签页中定义，“取值范围”单元格中，只需填写查询名称：QUERY（查询名称）。例： 
 .. image :: _static/images/bicenter/2.3.5.3.1.png
查询定义：
 .. image :: _static/images/bicenter/2.3.5.3.2.png

2.3.5.4	预定义层次维度
'''''''''''''''''''''''''''''''''''
倘若用户希望在界面上选多层次外部参数时，首先需要在jdbcDomain.properties文件中配置维度。一般有对两种表进行配置，一种是父子关系（自相关）表，一种是上级字段冗余表。
父子关系（自相关）表的示例如下：
 .. image :: _static/images/bicenter/tab1.png
 
该表结构的主要特征是：每条数据库记录中，包含一个指定其上级机构的ID。如果该机构是顶层机构（没有上级机构），则其上级机构ID则置为空或一个约定的值如：-1,0 等。
父子关系（自相关）表的配置项如下::

 维度名称.hierarchy.datasource=foodmart     //包含该表的数据源名称
 维度名称.hierarchy.store.type=parent.children.table  //该表的存储类型为父子关系（自相关）表
 维度名称.hierarchy.table.name=机构表 //表名（也可为一句sql查询出来的结果集）
 维度名称.hierarchy.cache.durance=1H //缓存时长
 维度名称.hierarchy.access.control=no
 维度名称.hierarchy.level.name=总公司,分公司,办事处 //各层级名称，由高至低，逗号分隔
 维度名称.hierarchy.child.id=机构_id  //存储本级ID的字段名称
 维度名称.hierarchy.child.name=机构名称 //存储本级名称的字段名称
 维度名称.hierarchy.caption.pattern={id} - {name}  //显示本级机构时的字符串模式
 维度名称.hierarchy.parent.id=上级机构_id  //存储上级ID的字段
 维度名称.hierarchy.parent.id.null.val=null  //顶层机构的上级ID的值 
 
上级字段冗余表的示例如下:
 .. image :: _static/images/bicenter/tab2.png
该类表的主要特征是：每条记录都将所有上下级关系存在相应的字段中。显而易见，该表结构中，所有非底层的字段都是有冗余的。
上级字段冗余表的配置如下::

 维度名称.hierarchy.datasource=foodmart //包含该表的数据源名称
 维度名称.hierarchy.store.type=flat.table //该表的存储类型为“上级字段冗余表”
 维度名称.hierarchy.cache.durance=1H  //缓存时长
 维度名称.hierarchy.table.name=机构表 //表名（也可为一句sql查询出来的结果集）
 维度名称.hierarchy.access.control=no
 #yes no 
 维度名称.hierarchy.level.name=总公司,分公司,办事处 //各层级名称，由高至低，逗号分隔
 维度名称.hierarchy.level.member.id=总公司_id, 分公司_id, 办事处_id  //存储各层次id的字段，由高至低，逗号分隔
 维度名称.hierarchy.level.member.name=总公司_name, 分公司_name, 办事处名称 //存储各层次名称的字段，由高至低，逗号分隔
 在“取值范围”中指定：hierarchy(配置的维度名称)即可。
 
 
Hierarchy + multiSelect写法::

	在jdbcDomain.properties配置文件中， #hierarchy define中添加上级字段冗余表维度配置：
	shuiwuhy.hierarchy.datasource=MSW    //MSW数据源
	shuiwuhy.hierarchy.store.type=flat.table //该表的存储类型为“上级字段冗余表”shuiwuhy.hierarchy.cache.durance=1H      //缓存时长1小时
	shuiwuhy.hierarchy.table.name=dim_dm_hy   //所用的数据库表名
	shuiwuhy.hierarchy.access.control=no
	#yes no 
	shuiwuhy.hierarchy.level.name=产业,行业门类,行业     //三级分层
	shuiwuhy.hierarchy.level.member.id=cy_mc,hyml_mc,hy_mc  //显示名称
	shuiwuhy.hierarchy.level.member.name=cy_mc,hyml_mc,hy_mc  //ID名称
	
查询条件标签页：
 .. image :: _static/images/bicenter/2.3.5.4.1.png
层次多选的录入控件用：multiSelect,取值范围为：hierarchy(配置的维度名称)。上图紫色框中部分数据格式设为111，表示第一二三层均可选，“0”表示不可选，“1”表示可选，不填时默认最底层可选。

2.3.5.5	预定义字典设置
'''''''''''''''''''''''''''''''''''
预定义字典设置定义了一个表中键值与其它值的对应关系，使用时可通过键值，获得相应的其它值，同样在jdbcDomain.properties文件中配置，配置语法如下::

 字典名称.dictionary.datasource=数据源      //配置数据源名
 字典名称.dictionary.store.type=table    //目前仅支持对数据库的表进行配置
 #flat table xml sql
 字典名称.dictionary.table.name= sql 查询语句    //通过sql语句，取出需要的字段，支持用select * from table的形式取出表中所有的字段
 字典名称.dictionary.key.field=字段名   // 键值所在字段名
 字典名称.dictionary.name.field=字段名   //名称所在字段名
 字典名称.dictionary.caption.pattern={id} - {name}   //显示名称的模式
 字典名称.cache.durance=1H       //缓存时长
 
 .. 例::
 
 sjhy.dictionary.datasource=MSW
 sjhy.dictionary.store.type=table
 sjhy.dictionary.table.name=select * from DIM_DM_HY
 sjhy.dictionary.key.field=HY_DM
 sjhy.dictionary.name.field=HY_MC
 sjhy.dictionary.caption.pattern={id} - {name}
 sjhy.cache.durance=1H
 
配置好的字典，在条件中，可以为选择控件提供取值，在“取值范围”一栏以：dictionary（字典名称）格式定义即可。当作为选择控件时，缺省情况下，显示值默认为 “名称所在字段”，实际值默认为“键值所在字段”。

2.3.5.6	预定义分析工具维度层次
'''''''''''''''''''''''''''''''''''
预定义分析工具维度层次，是BI-CENTER分析工具已经做好的层次信息，通过配置直接拿过来使用。同样在jdbcDomain.properties文件中配置，配置语法如下::

 维度名称.hierarchy.datasource=数据来源  //定义连接分析工具数据源的地址，数据源名称，取值维度等
 维度名称.hierarchy.store.type=url      //以下写法讲解同上面几种
 维度名称.hierarchy.caption.pattern={id} - {name}
 维度名称.hierarchy.cache.durance=1H
 维度名称.hierarchy.access.control=yes     //是否受框架权限控制
 维度名称.hierarchy.key=bicenter.key
 #asc desc none
 维度名称.hierarchy.sort=desc           //树形结构的排序规则
 #decimal,time
 维度名称.hierarchy.caption.sort.type=time   //目前只支持时间
 维度名称.hierarchy.caption.sort.parttern=yyyy年MM月dd日  //时间最底层的格式
 
 .. 例::
 
 olaptime.hierarchy.datasource=http://10.126.3.77:7001/olap/op/memberData?dsnId=/public/dsn/SW业务场景.dsn&cubeName=SW业务场景&hierName=[DIM_DM_TIME]&user=admin&_code=汉语
 olaptime.hierarchy.store.type=url
 olaptime.hierarchy.caption.pattern={name}
 olaptime.hierarchy.cache.durance=1H
 olaptime.hierarchy.key=bicenter.key
 #asc desc none
 olaptime.hierarchy.sort=asc
 #decimal,time
 olaptime.hierarchy.caption.sort.type=time
 olaptime.hierarchy.caption.sort.parttern=yyyy年MM月dd日
 
 配置好的维度层次，在条件中，可以为选择控件提供取值，在“取值范围”一栏以：hierarchy（维度名称）格式定义即可。当作为选择控件时，缺省情况下，显示值默认为 “层次名称字段”，实际值默认为“层次标识字段”。
 .. image :: _static/images/bicenter/2.3.5.6.1.png
 
2.3.6	依赖关系（级联菜单）
....................................
在自由报表中的依赖关系都是通过sql语句的参数传递，程序自动推断取值。如定义下拉列表框的依赖关系：
第一步：首先在查询条件中定义，在依赖参数的数据格式列以：
${var.被依赖的变量名}
的格式填写。如：
 .. image :: _static/images/bicenter/2.3.6.1.png
表示：行业门类的取值依赖行业，行业的取值依赖行业门类。
第二步：在查询定义中定义依赖关系的sql语句。如：
 .. image :: _static/images/bicenter/2.3.6.2.png
界面显示效果:
 .. image :: _static/images/bicenter/2.3.6.3.png

2.3.7	显示变量名
....................................
按需填写。对于下拉选择框、日期等录入控件，除须定义录入的参数值本身外，还需定义该参数的显示值，如：机构代码为“1000”，显示值为“xxx总行”；传入日期参数值为“20110101”，显示日期值为“2011年1月1日”。这种情况下，使用显示变量名存储变量的显示值。同样，可在报表上下文中通过“$显示变量名”方式引用显示变量的值。
注意，变量名不能为下列名称（大小写不敏感）
 .. image :: _static/images/bicenter/2.3.7.1.png

2.3.8	录入控件
....................................
在自由报表中，通过录入控件实现用户简单快捷地选择参数。这些录入控件主要包括文本框、下拉选择框和时间选择控件。下面我们将分类一一阐述。
 .. image :: _static/images/bicenter/2.3.8.1.png
 
2.3.8.1	文本框（text）
'''''''''''''''''''''''''''''''''''
文本框控件用于用户直接录入文本信息，用户可自由录入任何信息，不受任何限制。可在“默认值”一栏中定义其默认值，“输入范围”、 “显示变量名”等栏无效。如果定义了默认值，查看报表时，文本框首先显示默认值；否则为空。
文本框控件显示时按浏览器给定的缺省宽度展现， 也可通过“控件属性”（详见1.3.9）列来改变其宽度，例界面上某文本框的展示效果如下：
 .. image :: _static/images/bicenter/2.3.8.1.1.png
 
2.3.8.2	下拉选择框（select）
'''''''''''''''''''''''''''''''''''
下拉选择框用于用户在一个范围内选取一个值。下拉选择框的每个选项含两个值，一个为“显示值”，一个为“隐含值”，其中，“显示值”是用户在控件中看到的文本值，“隐含值”则不为用户所见，但它常常是我们在业务上使用的值（比如编码），因此，在“显示变量名”栏中填写的变量名对应于“显示值”，“变量名”栏的变量名则对应于“隐含值”。
如果“输入说明”栏中定义为“必选”，则下拉选择框中不含空白选项，否则，会包含一个表示什么都不选的空白选项。下拉选择框同样可以定义“默认值”，默认值必须是存在的选项，且必须用“隐含值”定义。
下拉选择框的“输入范围”一栏，用于定义其可用的所有选项（不必包含空白选项）。具体定义方法见上一节内容。
“数据格式”一栏对下拉选择框无意义
 .. image :: _static/images/bicenter/2.3.8.2.1.png

2.3.8.3	智能文本框（itext）
'''''''''''''''''''''''''''''''''''
智能文本框和下拉选择框一样，用于支持用户在一个范围内选取一个值，不同的只是操作方式，下拉选择框通过下拉按钮，查看所有选项，然后选择一项；而智能文本框没有下拉按钮，也不会列出所有选项，通过键入文本，智能文本框仅将与键入文本匹配的选项列出，由用户选择。用户也可在不键入文本的情况下，按“下箭头”键，显示部分选项。
至于各栏目的填写方式及意义，则与下拉选择框一致。
 .. image :: _static/images/bicenter/2.3.8.3.1.png

2.3.8.4	日期选择（datepicker）
'''''''''''''''''''''''''''''''''''
日期选择控件提供多种粒度的时间选择，包括：年、年半年、年季、年月、年月旬、年月日等。
日期选择控件也有“显示值”，“隐含值”之分。日期选择控件的“隐含值”，是预定义的编码，编码规则如下表：
 .. image :: _static/images/bicenter/tab3.png
 
日期选择控件由“数据格式”栏控制其时间粒度，具体写法见“数据格式”。
例如：年季数据格式为：yyq；年月数据格式为：yymm。
日期选择控件同样支持以当前时间为基准定义的“默认值”，具体语法见下一节“日期选择控件的缺省值”部分。
 .. image :: _static/images/bicenter/2.3.8.4.1.png

2.3.8.5	日历选择（Calendar）
'''''''''''''''''''''''''''''''''''
日历控件为日期选择参数的特殊形式
 .. image :: _static/images/bicenter/2.3.8.5.1.png
 
2.3.8.6	多选下拉框（multiSelect）
'''''''''''''''''''''''''''''''''
界面显示:
 .. image :: _static/images/bicenter/2.3.8.6.1.png
这种方式是为用户能够简单快捷的在某一层或某几层行业上选择多个成员。
特别需要说明的是，multiSelect通过格式来控制选取值的表现形式，其语法如下：
左字符串*右字符串|分隔字符串，在“查询定义”的函数中：${format(var.swhy,"|'*'|,")}
例： 如果多选下拉框选中了值 1， 2， 3 则：
如格式串为： ‘*' |，   则值变量为：‘1’，‘2’，‘3’
如格式串为： （*）|；   则值变量为：（1）；（2）；（3）
 .. image :: _static/images/bicenter/2.3.8.6.2.png
如果我们定义的三层多选，可以在数据格式处定义哪一层可选，“0”代表不能选择，“1”代表可选。默认不填的情况时最底层可选。
	例：在数据格式写“001”这样就只有第三层的成员能被选择。

2.3.9	控件属性
....................................
可填，用户可以根据自身的需要控制在界面显示的控件的长度。只需要在查询条件中增加一列“控件属性”，在控件属性一列填上：width:数字+em即可。表示控件显示为多长的字符宽度。假设在查询条件中定义如下:
 .. image :: _static/images/bicenter/2.3.9.1.png 
除此之外，还可以在控件属性中设置多选自动选择所有子成员功能，在控件属性中，填写：checkboxType:autocheckChildren即可，如果在控件属性中既需要设置width又要设置多选自动选择所有子成员，中间用分号隔开即可。如::

		width:20em;checkboxType:autocheckChildren

2.3.10	只读
....................................
若用户想使界面上的录入控件不可用，只需在查询条件标签页插入“只读”列，在只读列中填写布尔表达式，当其为真时，相应控件被置为不可输入状态，为假时，相应控件可用。该列缺省时，默认为假。如下图：
 .. image :: _static/images/bicenter/2.3.10.1.png
界面显示的产品名称控件呈灰色不可用
	只读列填写表达式：
 .. image :: _static/images/bicenter/2.3.10.2.png
注意，表达式中字符串需要使用””(双引号)。

2.3.11	数据类型
....................................
必填，指明传入参数的类型，下列类型之一： 
String：字符串，Number：数值，Date：日期

2.3.12	默认值
....................................
按需填写：对于日期选择控件、下拉选择框等控件，可定义其默认值。

2.3.12.1	日期选择控件的缺省值
'''''''''''''''''''''''''''''''''''
对于日期选择控件的缺省值定义，涉及到取当前时间或当前数据更新时间，因此语法较为特殊： ``${var.today( [+|-] n [d|t|m|q|s|y] )}`` 
或 ``${var.rundate([+|-] n [d|t|m|q|s|y] )}``其中， ``${var.today} 、${var.rundate}`` 为报表上下文的全局变量，分别为当前自然时间及当前数据更新时间的值。
+表示当前时间加，-表示当前时间减。
n 为数值。
d表示天，t表示旬，m表示月，q表示季，s表示半年，y表示年。
例::

 ${today("-1d")} 表示当前时间上一天， ${today("-2t")}表示上一旬， ${today("-3m")}表示三个月前……
 
要使${rundate("-nm")}有意义，需要额外的配置，否则其等于系统当前时间（与today一致）。参见 “数据更新时间获取方法设置”部分。

2.3.12.2	取Http Session或Http Request上下文中的参数值
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
当报表中需要引用Http Session 或 http request 中的字符串类型的参数值（注意：只能是字符串类型）时，可通过定义一个变量，通过定义缺省值，获取该参数，语法如下： 
	* session（“key”）   ：Http Session 中，名称为“key”的参数值
	* request（“key”）  ： Http Request中，名称为“key”的参数值

2.3.12.3	下拉选择框默认值
'''''''''''''''''''''''''''''''''''
如使用层次维度的方法查询出取值范围，在默认值处第一种是直接填写显示变量名，第二种是(变量名)例：
 .. image :: _static/images/bicenter/2.3.13.3.1.png
此例第一种默认值为：1400 - 食品制造业
第二种默认值为：(1400)

2.3.13	数据格式
....................................
Calendar控件的数据格式
按需填写。 对于日历控件，可在此栏定义格式。默认格式为yymmdd，格式串含义如下：
yymmdd  一个y（11）表示两位年，两个y表示4位年（2011）
一个m表示一位月份，两个m表示两位月份， 一个d表示一位日期，两位d表示两位日期。
例:: 

yymmdd        20110101

如果日期变量与显示变量格式不一致，按如下写法分别给出：
显示变量格式（值变量格式）
2.Datepicker 控件的数据格式
Datepicker 控件可提供年、年半年、年季、年月旬、年月日等多种粒度的时间选择。使用哪种粒度，是通过数据格式控制的，规则如下：
	* yy (年)
	* yys (年半年)
	* yyq (年季)
	* yymmt (年月旬)
	* yymmdd (年月日)

2.3.14	输入说明
....................................
控制输入值是否为必填项
 .. image :: _static/images/bicenter/2.3.14.1.png
例：在文本框控件的输入说明选“可输
 .. image :: _static/images/bicenter/2.3.14.2.png
在文本框控件的输入说明选“必输”
 .. image :: _static/images/bicenter/2.3.14.3.png
必输项没有输入任何值时会提示：
 .. image :: _static/images/bicenter/2.3.14.4.png
 
2.4	查询定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
查询定义是定义表样define需要的query信息。通过SQL，定义了怎样从数据库当中取出需要的数据。如下图所示，由查询名称，数据源，选择参数，用法，分组字段和查询定义列组成
 .. image :: _static/images/bicenter/2.4.1.png
 
2.4.1	基本规则
..............................
查询定义是表样define需要的query信息，说明如下：
 * “查询名称”，“数据源”，“查询定义”是必须的。数据源可以支持从多个数据库   读取数据。
 * 每个查询须定义一个不重复的名称。以便报表的其它部分对其进行引用。
 * 此处的SQL语句结束时不需要使用“；”。
 * 查询语句使用数据源的名称，在此处定义。数据源名称须与配置文件jdbcDomain.properties中数据库连接的设置保持一致。
如上图中数据源rwa就与下面它的配置文件jdbcDomain.properties中的设置的数据源名称保持一致::

rwa.jdbc.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
rwa.jdbc.url=jdbc:sqlserver://10.6.10.40:1433;databaseName=RWA;SelectMethod=cursor
rwa.jdbc.username=sa
rwa.jdbc.password=123456

报表上下文变量是指由报表引擎传入的参数，以“${var.变量名}”引用。需要注意的是，无论变量的数据类型如何，报表引擎都只能将其替换为文本串，因此，用户需自行决定是否需要加引号。如::
 
     select * from people where name=’${var.name}’   (${var.name}为字符串，需加‘’)
	 select * from people where age=${var.age}      (${var.age} 为数值)


2.4.2	用法
..............................
Sql查询语句可有如下用法：``“数据查询”、“前置处理”及“参数值”`` 
 * 用于“数据查询”的SQL语句用于从数据库中提取数据，填写到报表中.
 * “前置处理”须在所有查询发生之前率先进行查询，它通常用于执行一个或多个存储过程，其书写语法如下::
 
		{ call 存储过程名称(${var.参数1}，${var.参数2}…)}
例::

		{call SYMBOLS.TP_AM_REPORT.TP_AM_SUBJECT_LIMIT ( ${var.branch}, 
		${var.subcode}, ${var.userid})}

 * “参数值”查询用于填充报表查询条件中某参数的备选项，在 ``“查询条件”`` 标签页中，相应变量通过查询名称对其进行引用。

2.4.3	选择参数
..............................
“选择参数”的定义，使得我们可以在同一查询名称下，根据选择变量条件的不同，定义多个SQL语句和（或）数据源。执行时，根据某个变量的取值，来决定使用不同的SQL语句和（或）数据源进行查询。
选择变量支持如下语法：${var.变量名==值} 或  ${var.变量名=值} 例：
 .. image :: _static/images/bicenter/2.4.3.1.png
在选择参数一列填写布尔表达式，当判断布尔表达式为真时，才会执行后面的查询定义。

2.4.4	存储过程使用
..............................
查询定义直接调用写好的存储过程，，查询条件选择"前置处理"，使用语法{call 过程名称(参数1,参数2)}
 .. image :: _static/images/bicenter/2.4.4.1.png

2.4.5	动态获取数据源
..............................
数据源名称也可以动态从url或者session中获取。
如从url传入数据源名称：
 .. image :: _static/images/bicenter/2.4.5.1.png
此报表的URL为：
http://[ip]:[port]/应用名称/RegularReport?type=office2007/msw/mswqing2.xlsx&day=200601&_aal=queryreport&queryname=MSW
数据源名称MSW就从通过url传入报表中。
如果seesion中有数据源名称，可以使用${session[datasrc]}获得。

2.5	表样取数define
~~~~~~~~~~~~~~~~~~~~~~~~~~~
 .. image :: _static/images/bicenter/2.5.1.png
表样在界面上显示内容和结构的定义。下面具体介绍。

2.5.1	报表define基本结构
..............................
 .. image :: _static/images/bicenter/2.5.1.1.png
如图，一个报表，我们将其分为标题区，表格区，（表前附加信息，表后附加信息）。 而表格区可进一步分为：左上单元格，行表头，列表头、数据区，右下单元格。

2.5.2	定义报表的过程
..............................
通常，定义一张报表的基本步骤如下:
 * 定义表样（所见即所得）
 * 标注左上单元格
 * 标注右下单元格
 * 填写单元格，确定取数逻辑
 * 特殊功能批注
 * 完成

2.5.3	EEL语法
..............................
EEL语法是EL语法的扩展，EL 语法最大的特点就是使用上很方便。EL主要的语法结构：
例：${sessionScope.user.gender}
所有EL都是以${为起始、以}为结尾的。上述EL范例的意思是：从Session的范围中，取得用户的性别。

2.5.3.1	[ ]与. 运算符
'''''''''''''''''''''''''''''''''''''
EL 提供 . 和 [ ] 两种运算符来导航数据。下列两者所代表的意思是一样的：
${ds.ORDER.Quantity}等于${ds.ORDER[Quantity]}
不过，某些特殊情况下，两者会有差异：
当要存取的属性名称中包含一些特殊字符，如. 或 – 等并非字母或数字的符号，就一定要使用 [ ]，例如：${ds.user.My-Name }
上述是不正确的方式，应当改为：${ds.user[My-Name]}
在自由报表中， EEL语法主要用于：
*	定义变量引用
*	定义数据引用
*	定义字典引用
*	定义混合运算
*	定义url参数引用
*	定义session参数引用

2.5.3.2	变量引用
'''''''''''''''''''''''''''''''''''''
变量引用是通过内置对象var 标示查询条件变量实现的。变量引用格式： ``${var.varName}`` 
如::

		select  b.SWJG_3_JC as JC,a.NSRMC as NS,c.ZSXM_JC as XM,a.RKSE as SE from dbo.CDQ_RKSK a 
		inner join dbo.DIM_DM_SWJG b on a.SWJG_DM=b.SWJG_DM 
		inner join dbo.DIM_DM_ZSXM c on a.ZSXM_DM=c.ZSXM_DM
		where a.FSYF='${var.day}' and f.CY_MC='${var.cy}'

例在参数依赖关系中::

		select distinct hyml_mc,hyml_dm from dim_dm_hy where cy_dm='${var.cy}'

这个控件的取值是依赖于变量名为cy条件的值

2.5.3.3	查询数据集中数据的引用
'''''''''''''''''''''''''''''''''''''
数据引用是通过内置对象ds 标示查询数据集实现的。查询数据引用格式：
${ds.dataSetName.filedName}
如：``${ds.oa.HY}`` ，取出查询名为oa的HY字段。
对于有条件限制的查询数据，引用时只需遵循下面格式即可：
${ds.dataSetName[field1=1][field2=2][fieldName]}
如：${ds.oa[CY_MC=第一产业][NSRMC]}，取出查询名为oa且CY_MC是第一产业的NSRMC字段。
不仅支持在define标签页引用查询数据，也支持在sql语句中引用查询数据，格式
同上。
如::

		select  SWJG_5_JC WHERE SWJG_4_JC ='${ds.HZ[SWJG4]}'


2.5.3.4	字典引用
'''''''''''''''''''''''''''''''''''''
字典引用格式：
${dic.字典名[键值][字段名]}
* :ref:`字典引用详情参考 <dictionary>`

2.5.3.5	混合运算
'''''''''''''''''''''''''''''''''''''
混合运算一般即是指四则运算，例::

		${(ds.oa[CY_MC=第一产业][RKSE]-ds.od[CY_MC=第一产业][RKSE])/ds.od[CY_MC=第一产业][RKSE]


2.5.3.6	url请求参数引用
'''''''''''''''''''''''''''''''''''''
url请求参数引用格式：${request[paraName]}

2.5.3.7	seesion参数引用
'''''''''''''''''''''''''''''''''''''
session参数引用格式：${session[paraName]}

第3章	清单型报表定义的说明
---------------------------------
清单型报表有下列几种变形：
1、	只有明细项，这类报表最为简单， SQL查出来展现即可。
2、	明细 + 总计，这类报表推荐使用下面前端分组汇总的方式。
3、	明细+小计+总计，就可以使用前端分组汇总和数据库分组汇总两种方式。

3.1	简单的清单报表
~~~~~~~~~~~~~~~~~~~~~~~~~~~
这类报表只需要定义SQL把数据查询出来前端展现。例:
 .. image :: _static/images/bicenter/3.1.1.png
这张报表非常简单，下图的define：   基本批注为标题，左上表头，右下单元格。
 .. image :: _static/images/bicenter/3.1.2.png
查询定义：“查询定义”列SQL将所用数据全部取出来
 .. image :: _static/images/bicenter/3.1.3.png

3.2	标注分组汇总
~~~~~~~~~~~~~~~~~~~~~~~~~~~
清单型报表的分组汇总支持两种方式:
	* 第一种方式: 从数据库查询清单数据,在BI-CENTER的服务端进行汇总以及前端显示。
	* 第二种方式: 在数据库查询清单数据与汇总数据,在BI-CENTER报表前端显示。

3.2.1	第一种 前端分组汇总
....................................
无论是小计还是总计，进行前端分组汇总时只能放在分组清单的后面。例
 .. image :: _static/images/bicenter/3.2.1.1.png
做到上图报表的效果， 第一层按产品数量求和，最后总订单数量总计。需使用分组技术，先定义分组字段，然后取数；总计处可以使用分组聚合函数。写法如下：

3.2.1.1	定义分组
'''''''''''''''''''''''''
在“查询定义”标签页，“查询定义”列SQL将所用数据全部取出来。“分组字段”列填写分组字段，多个字段用逗号隔开。
 .. image :: _static/images/bicenter/3.2.1.1.1.png
 “ShipName”产品名称，第一次小计字段。
      注：SQL语句需要order by 分组字段。


3.2.1.2	批注
'''''''''''''''''''''''''''''''
表样define的标签页：
分组需要标识的地方用“bindTo: "group.查询名称[分组字段]"”，如果分组字段只有一个直接“bindTo: "group.查询名称"”。
基本批注为标题，左上表头，右下单元格，分组处写法
 .. image :: _static/images/bicenter/3.2.1.2.1.png
 
3.2.1.3	分组聚合函数
'''''''''''''''''''''''''''''''
可以使用一些特定的聚合函数来快速的分组求和等操作。
一般写法：$(group.查询名称(分组字段名).分组函数名(公式字段名))。
支持的函数如下：
 .. image :: _static/images/bicenter/tab4.png
其中，上下文敏感的函数，是指根据其出现位置的不同，会得到不同结果的函数，如：当分组求和函数出现在分组尾时，得到的是该分组所有行的和；当其出现在查询语句所在行时，其结果是从第一行到当前行的和；当其出现在表头时，得到的是第一行的值。其它上下文敏感函数的行为也是同样的。例如：
 .. image :: _static/images/bicenter/3.2.1.3.1.png
界面显示：
 .. image :: _static/images/bicenter/3.2.1.3.2.png

3.2.1.4	数据集聚合函数
'''''''''''''''''''''''''''''''
除分组聚合外，BI-CENTER还支持对整个查询结果集的某个字段进行聚合运算。
一般写法：$(aggrds.查询名称.分组函数名(字段名))。
支持的函数列表如下：
 .. image :: _static/images/bicenter/tab5.png
使用以上函数时，都需定义一个分组，此分组可以不使用。
 	我们程序还有一些自定义的函数：
  ${dcLastDay(var.day,"yyyy年MM月dd日")}    显示“day”的最后一天
          day            为参数时间
yyyy年MM月dd日   界面显示的格式
${dcToDate(var.day)} ：把“day” 的格式转换成日期型，这样就可以参与日期的运算了。
${ (calcDate(dcToDate(var.day),"-12m")}：显示“day”12个月前的日期，这里的“-12m”代表12月前。
“[+|-] n [d|t|m|q|s|y]” +表示当前时间加，-表示当前时间减。
n 为数值。
d表示天，t表示旬，m表示月，q表示季，s表示半年，y表示年。
还可以进一步用format 函数控制最终的显示效果，如：
${format(calcDate(dcToDate(var.day),"-12m"),"yyyy年MM月")}
  还可以转换时间格式：${dcConvertDate(var.day,"yq")}   把“day”的格式转为年季。

3.2.2	第二种 数据库分组汇总
....................................
 .. image :: _static/images/bicenter/3.2.2.1.png
想要得到上图的效果，“前端分组”是一种方式，下面介绍第二种“数据库分组”方法。

3.2.2.1	定义分组
'''''''''''''''''''''''''''''''
“查询定义”标签页：
 .. image :: _static/images/bicenter/3.2.2.1.1.png
如上图可以看出，“SK”为清单明细的查询，“HZ”为行业小计入库税额的查询， “ZJ”为入库税额总计的查询。   清单处的查询定义“${ds.HZ[HY_MC]}”是取“HZ”查询处的“HY_MC”作为分组字段。程序执行时，先执行没有依赖关系的SQL，“HZ”查询可以查询出“HY_MC”字段，然后将“HZ”的“HY_MC”带到“SK”查出明细。展现的顺序由define标签页的样式控制。

3.2.2.2	批注
'''''''''''''''''''''''''''''''
表样define的标签页：基本批注为标题，左上表头，右下单元格。
 .. image :: _static/images/bicenter/3.2.2.2.1.png
程序会根据表样定义，自动在界面进行分组展示。
 
3.3	清单型数据区定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
 .. image :: _static/images/bicenter/3.3.1.png
 把查询出来的结果集填入数据区。
解释：
* oa             ：查询的名称/结果集，必须和查询定义想对应。
* .              ：分隔符
* JC             ：结果集的列名
目前有两种方式在一个单元格中引用查询结果。
1.	${ds.查询名.字段名}
一个单元格只填写一个查询结果值，且该单元格以行为单位向下扩充时，使用该方式。该方式的查询名须与SQL查询定义中的查询名称一致。例：
 .. image :: _static/images/bicenter/3.3.2.png
2.	${ds.查询名[字段名]}
要存取的属性名称中包含一些特殊字符，如. 或 – 等并非字母或数字的符号，就一定要使用 [ ] 例：
 .. image :: _static/images/bicenter/3.3.3.png
在清单型报表中，如果数值类型的数据位数大于11位，导出excel时该列数据会用科学计数法表示；如果小数点后几位均为零，导出excel时该列数据的这些零不会被保留。若想保留之前数据的格式，这种情况下需要在单元格上加一个转义字符:&nbsp;例：
 .. image :: _static/images/bicenter/3.3.4.png

3.4	清单型报表同行excel运算
~~~~~~~~~~~~~~~~~~~~~~~~~~~
在清单型报表中，支持同行的excel运算但是不支持跨行运算。只需在Excel的define标签页定义即可。某张清单型报表的define标签页定义如下：
 .. image :: _static/images/bicenter/3.4.1.png
界面显示：
 .. image :: _static/images/bicenter/3.4.2.png
 
3.5	清单型报表交替背景色定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
3.5.1	填充色定义
............................
在相应的行上，将报表最后一列相邻的右边一个单元格，着上用于交替的背景色。例：
 .. image :: _static/images/bicenter/3.5.1.1.png
界面显示：
 .. image :: _static/images/bicenter/3.5.1.2.png

3.5.2	标注颜色值定义
............................
在定义颜色的时候需要特别注意，按下图操作：
 .. image :: _static/images/bicenter/3.5.2.1.png
填充的颜色必须用颜色码RGB来标识，否则会出现偏色的问题。
在标注上直接写明颜色的编号：
 .. image :: _static/images/bicenter/3.5.2.2.png
界面显示：
 .. image :: _static/images/bicenter/3.5.2.3.png
 
3.6	统计图定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
3.6.1	chart定义
............................
统计图通过增加标签页“chart”定义。 如下图所示：
 .. image :: _static/images/bicenter/3.6.1.1.png
 * 名称：用于定义统计图的名称。
 * 标题：显示在统计图上的标题。
 * 数据单位：填写后放在副标题的位置。
 * 数据精度：小数位数。
 * 自动进位：|前面为数据缩进的位数，|后面为图上所带对应位数的单位。
如设1000，不满1000的，保持原值显示，大于等于1000的数据会自动转换成K,M类数据；如设1|千，不满1000的，保持原值显示，大于等于1000的数据会自动转换成格式：N千；如设10,10,10,10|十,百,千,万,数据会按照自身的大小转化成N十,N百,N千，N万显示。
 * 横坐标轴说明：横坐标名称。
 * 纵坐标轴说明：纵坐标名称。
 * 三维显示：是否3D图形，否为2D图。
 * 类型：定义统计图的类型。
目前支持饼图,散点图,条形图,柱状图,堆叠图,线图,面积图,累积图,漏斗图,金字塔图,。
 * 色系：定义统计图使用的颜色系列（jdbcDomain内可预定义）
 * 数据序列名称： 定义数据序列的名称， 一个数据序列对应报表数据的一列（或几列），当一幅图中包含多个数据序列时，用“，”分隔，如：序列1，序列2，序列3……和下面的“数据序列所在的列或行”对应。
 * 数据序列所在的列或行：指定数据序列对应的报表数据列，使用Excel列坐标（大写字母）表示，多个数据序列使用“，”分隔。
一些类型的统计图（如散点图），一个数据序列需要多个值，这时，使用“|”分隔。 如： A|B， C|D， 表示统计图显示两个序列，一个序列的横坐标数据来源于数据列B，纵坐标数据来源于数据列A；另一个横坐标数据来源于数据列D，纵坐标数据来源于数据列C。
13.	数据点名称：  指定数据序列中每个数据点的名称所在数据列。
对于柱图、线图，数据点的名称即为横坐标的值， 对于饼图，数据点名称则对应每个分瓣的名称。
14.	联动参数所在的行或列：用于综合仪表板中参数的联动。作为联动源表则需设置。（为BI-CENTER综合仪表板使用）

3.6.2	效果
............................
3.6.2.1	柱图实例
''''''''''''''''''''''''''''''''''''''
 * chart标签页
 .. image :: _static/images/bicenter/3.6.2.1.1.png
A列时间作为横坐标，B列入库税额作为纵坐标。这里的色系ll对应于配置文件jdbcDomain.properties配置的色系名，* :ref:`详情参见统计图序列颜色设置 <color>`
 .. image :: _static/images/bicenter/3.6.2.1.2.png
 * define标签页
 .. image :: _static/images/bicenter/3.6.2.1.2.png
 * 界面图形效果
 .. image :: _static/images/bicenter/3.6.2.1.3.png
由于在chart标签页中“图上是否显示数据原始值”设置为是，所以值显示在图上。单位设的从千元到亿，则小于1千的数据保持原值，其余数据均会转换成相应单位。由于数据精度设为0，则图上所有数据均会是整数
 
.. _line:

3.6.2.2	线图实例
''''''''''''''''''''''''''''''''''''''
 * 把chart标签页柱状图改为线图
 .. image :: _static/images/bicenter/3.6.2.2.1.png
A列（时间）作为横坐标，B（入库税额）、C（提退税额）列作为纵坐标。
 * define标签页如下
 .. image :: _static/images/bicenter/3.6.2.2.2.png
 * 界面图形效果
 .. image :: _static/images/bicenter/3.6.2.2.3.png
由于在chart标签页中“图上是否显示数据原始值”设置为否，所以值不显示在图上。单位设的10000000|千万，则小于1千万的数据保持原值，大于1千万的数据转换成千万数据显示。由于数据精度设为2，则图上所有数据均会保留两位显示。 

3.6.2.3	散点图实例
''''''''''''''''''''''''''''''''''''''
 * 把chart标签页改为散点图
 .. image :: _static/images/bicenter/3.6.2.3.1.png
数据点名称可以不定义，A列时间作为横坐标，B列，C列数量作为纵坐标。
 * :ref:define标签页同`线图实例 <line>`
 * 界面图形效果
 .. image :: _static/images/bicenter/3.6.2.3.2.png 
由于在chart标签页中“图上是否显示数据原始值”设置为否，所以值不显示在图上。单位没有设，则默认转成K、M类数据。由于数据精度没设，则图上所有数据默认均会保留两位显示。

3.6.2.4	饼图实例
''''''''''''''''''''''''''''''''''''''
 * 把chart标签页改为饼图
 .. image :: _static/images/bicenter/3.6.2.4.1.png
A列时间作为每个分瓣的名称，B列入库税额作为每个分瓣的大小。
 * :ref:define标签页同`线图实例 <line>`
 * 界面图形效果
 .. image :: _static/images/bicenter/3.6.2.4.2.png
由于在chart标签页中“图上是否显示数据原始值”设置为是，所以值不显示在图上。单位设的10000000|千万，则小于1千万的数据保持原值，大于1千万的数据转换成千万数据显示。由于数据精度为0，则图上所有数据均是整数。图例位置设为无，则不在图上显示图例。

3.6.2.5	条形图实例
''''''''''''''''''''''''''''''''''''''
 * 把chart标签页改为条形图
 .. image :: _static/images/bicenter/3.6.2.5.1.png
B列时间作为纵坐标，B列入库税额和C列提退税额作为横坐标。
 * :ref:define标签页同`线图实例 <line>`
 * 界面图形效果
 .. image :: _static/images/bicenter/3.6.2.5.2.png
由于在chart标签页中“图上是否显示数据原始值”设置为是，所以值不显示在图上。单位设的10000000|千万，则小于1千万的数据保持原值，大于1千万的数据转换成千万数据显示。由于数据精度为0，则图上所有数据均是整数。图例位置设为右，则显示在图形的右边，由于三维显示设为否，则图形不进行三维展示。

3.7	嵌入多个单元格
~~~~~~~~~~~~~~~~~~~~~~~~~~~
当需将一个单元格插入多子单元格时，在单元格插入多个值，用逗号分隔。然后做如下标注：
embed:{col:1,row:2}
上述标注表示，按1列2行排列单元格中的两个值。例：
 .. image :: _static/images/bicenter/3.7.1.png
界面显示:
 .. image :: _static/images/bicenter/3.7.2.png

3.8	清单合并单元格
~~~~~~~~~~~~~~~~~~~~~~~~~~~
清单报表中，前面查询出来的数据都一样，界面上可以做到合并相同数据单元格内容。
普通明细+小计+总计型报表需做如下标注
 .. image :: _static/images/bicenter/3.8.1.png
界面显示：
 .. image :: _static/images/bicenter/3.8.2.png
在需要合并的单元格上做如下标注::

   mergeRow:true 
   
就可以实现相同区域的合并。上例标注改为：
 .. image :: _static/images/bicenter/3.8.3.png
界面显示：
 .. image :: _static/images/bicenter/3.8.4.png
还有一种报表的合并，需要根据前面的某列数据为依据合并,例：
 .. image :: _static/images/bicenter/3.8.5.png
mergeRow:true   这句是合并相同的数据，和以前的帮助文档用法相同。
mergeRowBy:-4   这句是以哪一行为合并列的标准。如“-4”就是以“贷款人”这一列来合并的“占贷款总额比例”。“-5” 就是以“贷款人”这一列来合并的“本期增减”。“-6”就是以“贷款人”这一列来合并的“欠息金额”。
“-N”的N是当前要合并的列到“所依据列”的列距离数。负数代表向左，正数代表向右。一旦写为mergeRowBy后，无论该列的数据是否有差异，均取第一个数据。
界面显示：
 .. image :: _static/images/bicenter/3.8.6.png
  
3.9	清单型报表填充值设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~
在清单型报表中，查询的报表数据区为空白没有值时，可以使用如下函数进行设置。
例::

${iif(ds.HZ[NSRSBH=ds.SK[NSRSBH]][Y]="",0,ds.HZ[NSRSBH=ds.SK[NSRSBH]][Y])}

    如果查询为空，使用0填充，不为空时用查询出的数据填充。
	
第4章	特殊清单+自由布局报表（凭证）
-----------------------------------------
一些报表，尤其是一些凭证，它们常常将查询结果集的一行数据自由布局(比如表现为一张客户凭据单)，然后根据查询结果集的行数向下扩展(成为多个客户的单据)，针对这种类型的报表，我们需要按下述规则标注。示例：
 .. image :: _static/images/bicenter/4.1.png
上图由多个客户信息分段组成凭证式报表。如果实现上图效果，基本标注为：左上表头，右下单元格，分组处写法，分页处写法。
 .. image :: _static/images/bicenter/4.2.png
“ 纳税人缴税清单”和“缴税日期”的 ``bindTo:'ds.SK'`` 批注意思： “ 纳税人缴税清单”和“缴税日期”这两行连接下面“SK”查询出的数据在每个凭证上都有。    “应缴税额”的 ``break:'line'`` 批注意思：每个凭证在此分开，不会出现一个凭证只有一半就分开的情况，这里的 ``break:'line'`` 可以用 ``break:'inOnePage'`` 或者break:'Page'替换，用 ``break:'inOnePage'`` 或者 ``break:'Page'`` 时，必须与 ``bindTo:'ds.SK'`` 一起批注。

 
第5章	固定行列型报表定义的说明
---------------------------------------

 .. image :: _static/images/bicenter/5.1.png
固定型报表的标题，左上表头，右下单元格和单元格格式等基本的定义同清单型报表，下面介绍固定型报表的一些特殊定义。
 
5.1	固定型报表的数据区
~~~~~~~~~~~~~~~~~~~~~~~~~~~

 .. image :: _static/images/bicenter/5.1.1.png 
把查询出来的结果集填入数据区。
解释：
hy              ：query的名称/结果集，必须与查询定义相对应。
.                ：分隔符，必须使用
[HYMLDM=01]   ：条件，多个条件时，前后中括号是必须的；等号后面的条件无视数据类型
RKSE           ：结果集的列名；用法同清单型报表。
 * ${ds.查询名[字段名1=值][字段名2=值]…][字段名3]}
在固定行列报表中，一般用这种方法填充数据，字段名3的取值必须满足前面[字段名1=值][字段名2=值]的条件。例：
 .. image :: _static/images/bicenter/tab6.png
 * 如果需要两个查询字段做加减乘除等运算，可以使用如下格式：
${(ds.oa[CY_DM=01][RKSE]-ds.od[CY_DM=02][RKSE])/ds.od[CY_DM=01][RKSE]}
一个${}内包含的运算作为一个结果集。
固定行列型报表比清单型报表定义较为直观，逻辑不复杂。也可以通过以下标注实现其他功能。

5.2	固定型报表补录
~~~~~~~~~~~~~~~~~~~~~~~~~~~
只有固定行列型报表可以做补录。

5.2.1 标注补录区域
...................................
 * 左上表头定义中的补录区域
 .. image :: _static/images/bicenter/5.2.1.1.png
editableAreas:["C13","E6:F9"]，表示在浏览页面此处的单元格是可以补录的。C10是指一个单元格，E6:F9是指矩形范围内的单元格。默认为只能输入数字，如果想要此单元格可以输入字母，中文等信息，在后面添加：validatePattern:'none'。如：
 .. image :: _static/images/bicenter/5.2.1.2.png
 * 还可以在特定单元格上做批注：
 .. image :: _static/images/bicenter/5.2.1.3.png
说明此单元格在界面上可以补录。
 .. image :: _static/images/bicenter/5.2.1.4.png 
说明此单元格在界面上不可以补录，一般适用于大范围补录，特殊单元格不需要补录的情况。
 
5.2.2	报表及补录数据存储定义
...................................
当报表及补录数据需要保存到数据库中时，需定义报表参数与数据库中表的字段的对应关系。
如下图所示，我们需要指定用于存储补录数据的表及数据源。同时，我们还指明了报表变量对应的字段，以及相应的数据类型。
下图为“存储定义”中，数据序号、格式、说明列可不填写，其余均为必填。
 .. image :: _static/images/bicenter/5.2.2.1.png
举例说明需要保存的数据库及表：
 * 在有ORACLE的机器上新建一个oracle的数据库叫sw，表名叫 FIN_REPORT_MODIFY
 * 新建的字段有：
每张需要补录的数据报表名称由引擎自动识别保存::

  CREATE TABLE FIN_REPORT_MODIFY (
    REPORT_CODE  VARCHAR2(100 CHAR),-----这句必须有，存储补录数据的报表名称
    REPORT_DATE  VARCHAR2(100 CHAR), ---用来唯一区别该补录表内的特殊行
    BRANCH      VARCHAR2(50 CHAR),   黄色是报表参数
    FREQ        VARCHAR2(50 CHAR), 需要根据具体的报表参数来增减
   --以下字段必需照样保留
    SECTION_IDX  NUMBER(2),
    PAGE        NUMBER(5),
    OPERATION_NO VARCHAR(50 CHAR),
    CHUNK_IDX    NUMBER(2),
    DATAS       VARCHAR2(2000 CHAR),
    COMMENTS    VARCHAR2(1000 CHAR),
    USER_ID      VARCHAR2(50 CHAR),
    STATUS      NUMBER,
    LAST_MODIFY_DATE  DATE); 
	CREATE  INDEX  FIN_REPORT_MODIFY_01  ON FIN_REPORT_MODIFY(REPORT_CODE)；
	CREATE  INDEX  FIN_REPORT_MODIFY_02  ON FIN_REPORT_MODIFY(REPORT_DATE);
	CREATE  INDEX  FIN_REPORT_MODIFY_03  ON FIN_REPORT_MODIFY(BRANCH);
	CREATE  INDEX  F IN_REPORT_MODIFY_04  ON FIN_REPORT_MODIFY(FREQ);
	CREATE  INDEX  F IN_REPORT_MODIFY_05  ON FIN_REPORT_MODIFY(SECTION_IDX);
	CREATE  INDEX  FIN_REPORT_MODIFY_06  ON FIN_REPORT_MODIFY(PAGE);
	CREATE  INDEX  FIN_REPORT_MODIFY_07  ON FIN_REPORT_MODIFY(CHUNK_IDX);
	CREATE  INDEX  FIN_REPORT_MODIFY_08  ON FIN_REPORT_MODIFY(USER_ID);
	CREATE  INDEX  F IN_REPORT_MODIFY_09  ON FIN_REPORT_MODIFY(STATUS);

3.	在jdbcDomain.properties新加的数据连接信息::

		fin.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
		fin.jdbc.url=jdbc:oracle:thin:@192.168.198.123:1521:sw
		fin.jdbc.username=sw
		fin.jdbc.password=oracle
 
补录的数据就存放在FIN_REPORT_MODIFY表里，这里的表名不可以更改。

5.2.3	界面演示
...................................
 * 在表样定义：
 .. image :: _static/images/bicenter/5.2.3.1.png
 * 界面显示：
 .. image :: _static/images/bicenter/5.2.3.2.png
 * 点击补录图标后 .. image :: _static/images/bicenter/5.2.3.3.png
 .. image :: _static/images/bicenter/5.2.3.4.png
有红线的地方表示可以补录。
 * 填写好数据补录提交后,点击右下角的提交按钮
 * 点击补录审核图标后： .. image :: _static/images/bicenter/5.2.3.5.png
 .. image :: _static/images/bicenter/5.2.3.6.png
 * 有小标识的地方是补录过的数据。鼠标停留在小标识处提示：
 .. image :: _static/images/bicenter/5.2.3.7.png
 * 点击同意，提示操作完成，结束补录。
 * 补录后打印，导出的数据都是补录后的数据。
 * 该补录必需通过审核功能后才能使用，需要有应用框架的权限体系提供具体的权限分配情况。

5.3	固定型报表填充值设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~
只有固定型报表在其它标签页设置行为控制中的“无值单元格填充值”这一行时才有效。其它设置标签页如下：
 .. image :: _static/images/bicenter/5.3.1.png
在行为控制中，“无值单元格填充值”一行的值表示：在行列固定型报表中，查询的报表数据区为空白没有值时，就会这里设置的值去填充。这里设的0，则用0去填充没有值的单元格。这里如若不设值，则表示该单元格仍然保持空白。
界面显示：
 .. image :: _static/images/bicenter/5.3.2.png

第6章	套表定义
---------------------------
套表可以把有关联的报表放在一起，也可以做批量的平衡检查。
套表定义本身，就是按固定模板填制内容的行列固定型报表。它用“套表目录”标签页取代普通报表的“define”标签页，同时，它增加了一个“校验规则”标签用于定义表内表间平衡的运算公式。如果是清单型报表，没有具体校验规则，那么“校验规则”标签页可以为空，但必须存在。

6.1	套表目录定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
下图是“套表目录”标签示例：
 .. image :: _static/images/bicenter/6.1.1.png
本例B2，B3为清单型报表，B4，B5为行列固定型报表。
其中，报表标题标注，左上、右下单元格标注，都和其它报表一样，不同的是，列名不能删除及修改。套表目录的每一行代表一个报表目录项，一个报表目录项必须包含“报表名称”、“参数”，“报表别名”三项。
“报表别名”项用于定义平衡校验规则时引用相应报表，因此不能重名。
“参数”项用于为访问该报表提供查询条件，该项内容将作为URL字符串的一部分，用于查询报表数据，因此，语法为：
key1=value1&key2=value2&…
“报表别名”为参与校验的报表取一个简单的名字，方便引用。
注意，因为套表可以定义自己的查询条件，所以，如果该报表查询条件中的变量名与套表相同，则可以不填，系统自动使用套表提供的查询条件。参数中必须填写的条件是type，它的值为表样的文件名。如果在Fintelligen中使用，还必须填写S_ID，其值必须与在Fintelligen中注册报表中定义的“报表编号”一致。
如果该报表查询条件中的变量名与套表的相同，但取值不同，也必须将其填写在“参数”列中，取值部分支持如下运算语法：
${  bicenter支持的运算公式 }

6.2	平衡校验规则定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
下图是“校验规则”标签示例，清单型报表可以不填写规则
 .. image :: _static/images/bicenter/6.2.1.png
其中，列名不能删除及修改。每个校验规则占用一行，使用“套表目录”中的别名和Excel单元格坐标来唯一指定报表中的单元格，语法如下:
报表别名!单元格坐标， 例： SC1024!C5。
界面如图：
 .. image :: _static/images/bicenter/6.2.2.png
鼠标点击未通校验的小图标 ，界面弹出未通过校验的详细信息：
 .. image :: _static/images/bicenter/6.2.3.png
点击检查，可以对两张校验的报表进行同屏对比：
 .. image :: _static/images/bicenter/6.2.4.png
点击下端的报表信息部分，报表上就会用下面示例的颜色填充相应的校验单元格：
 .. image :: _static/images/bicenter/6.2.5.png

第7章	特殊清单+固定行列型报表
----------------------------------
一些报表，比如银行分支机构汇总表，其中各列是固定的，机构范围（行）是不固定的。这种报表适用于行在一个范围内（1000行以内），但会有变化；这类报表不会分页。
另外，这类报表有一个特点，把几个查询合并为一个，在技术上、维护上不太容易或者代价比较大。实例：
 .. image :: _static/images/bicenter/7.1.png
下面的税务报表中，左边纳税人名称和纳税人标识号是要求由清单查询出来，预先不确定有多少纳税人名称和标识号，入库税额和提退税额却是根据纳税人编号固定查询。
入库税额单元格的写法：${ds.HZ[NSRSBH=ds.SK[NSRSBH]][Z]}
表示： Z(入库税额)的取值是通过HZ查询中NSRSBH(纳税人识别号)与左边单元格纳税人识别号匹配取值的。查询定义：
 .. image :: _static/images/bicenter/7.2.png
界面显示：
 .. image :: _static/images/bicenter/7.3.png
这类报表属于单层混合型报表，是支持列上excel运算的，一般即是列上汇总。所谓单层次混合型报表就是指报表的字段的层次只有一层的混合型报表。假如某报表属于特殊清单+行列固定型报表，即是属于单层混合型报表，对报表的某列汇总，define标签页定义如下：
 .. image :: _static/images/bicenter/7.4.png
界面显示：
 .. image :: _static/images/bicenter/7.5.png
 
第8章	特殊效果
--------------------------
各类型报表还有一些通用的标注，下面详细讲解几个：

8.1	设置单元格格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~
对每个单元格做特殊设置时：
 .. image :: _static/images/bicenter/8.1.1.png
“数字”的定义是有效的，可以定义成不同分类。
目前，系统可识别及重现Excel单元格中的如下信息：
 * 填入单元格内的文本、数值及运算公式（目前仅支持加减乘除四则运算等简单公式），查询结果引用
 * 单元格格式信息
 * 单元格左中右对齐
 * 文字横排、竖排
 * 单元格背景色、是否显示边框
 * 单元格字体是否使用粗体

8.2	特殊人民币格式
~~~~~~~~~~~~~~~~~~~~~~~~~~~
如何使人民币显示成我们想要的格式？下面我们将逐一讲解。

8.2.1	人民币中文大写
...............................
第一步设置单元格为“数值”类型 ,
第二步做如下标注：money:{format:”chineseNumber”} 例：
 .. image :: _static/images/bicenter/8.2.1.1.png
界面显示：
 .. image :: _static/images/bicenter/8.2.1.2.png

8.2.2	人民币金额网格
...............................
第一步设置单元格为“数值”类型,
第二步做如下标注：money:{format:”grid”} 例:
 .. image :: _static/images/bicenter/8.2.2.1.png
界面显示：
 .. image :: _static/images/bicenter/8.2.2.2.png
 
8.3	斜线表头
~~~~~~~~~~~~~~~~~~~~~~~~~~~
复杂的中国式报表中，往往需要在单元格中画斜线，这可通过如下标注完成：
style:"topLeft-bottomRight-line",captioins:[“右上显示值”,”左下显示值”]
该标注指示系统在单元格中画由左上向右下角画一条直线，并将右上显示值、左下显示值分别放到相应位置。例
 .. image :: _static/images/bicenter/8.3.1.png
界面显示：
 .. image :: _static/images/bicenter/8.3.2.png 
 
8.4	隐藏指定列
~~~~~~~~~~~~~~~~~~~~~~~~~~~
 在一定的条件下，隐藏指定的列。
如下图，可在列表头区中，相应单元格中标注::

		hideIf：条件表达式
			replaceVal:0
		
		
 
 .. image :: _static/images/bicenter/8.4.1.png
当条件表达式为真时，隐藏报表中相应的列。
条件表达式以字符串形式定义，支持如下逻辑操作符：=、!=、> 、 >=、  <、  <= 。条件表达式中，可引用查询条件。
replaceVal:n   指隐藏此列后，如果有其它地方的公式引用到此列的数据时，用n表示此列数据，倘若不加replaceVal:n批注，有其它地方的公式引用到此列的数据时，则引用此列数据的真实值。
注： 该标注须定义于列表头单元格中， 即，列表头高度须标注为大于0（，否则，将被视为没有列表头。

8.5	标注多个章节
~~~~~~~~~~~~~~~~~~~~~~~~~~~
当一个报表内存在多个清单型表格时，可将其分解为多个章节。
每个章节在开始的第一个单元格用如下标注标明：
section：章节序号
其中，章节序号为以1为基的自然数。例：
 .. image :: _static/images/bicenter/8.5.1.png

8.6	特殊格式及计算用法
~~~~~~~~~~~~~~~~~~~~~~~~~~~
8.6.1	表头的层次
...............................
表头有时展现的层次较多，可以直接用EXCEL的缩进方式。如图：
 .. image :: _static/images/bicenter/8.6.1.1.png
 
8.6.2	单元格取多个查询结果计算
..................................
在行列固定型报表中，若某个单元格想引用该报表的多个查询的计算结果时，可以参考如下样例来定义计算结果。
 .. image :: _static/images/bicenter/8.6.2.1.png
oa为一个查询定义。
另外，EXCEL自带的多种公式都可以支持，举例如下。

8.6.3	求和SUM
..................................
在编辑单元格时，可以使用公式：
 .. image :: _static/images/bicenter/8.6.3.1.png
 
8.6.4	条件判断IF
..................................
IF(Con,R1,R2) ，假设Con示例为R1>= R2（标准的excel公式格式都可以），即IF(R1>= R2,R1,R2),表示的含义即是：如果R1>= R2成立，则单元格取R1的值，如果R1>= R2不成立，则该单元格取R2的值。例：
 .. image :: _static/images/bicenter/8.6.4.1.png
另外ROUND，MAX, MIN 等函数目前也支持。

8.7	标注Href跳转
~~~~~~~~~~~~~~~~~~~~~~~~~~~
为支持由一张报表向相关报表的跳转，可通过在触发跳转的单元格中做如下标注：
{href: url}
url字符串中，可引用报表上下文变量（$变量名）及查询结果
.. 例::

 {href："RegularReport?type=T0_new.xls &op=view&branch=${var.branch}&day=${var.day}&cltno=${ds.data[SEQ_NO]}&cltname=${ds.data[PAYER_NAME]}"}
    type=T0_new.xls   这里的T0_new.xls是跳转的目标报表。
     branch=${var.branch}  第一个branch为连接接收报表的参数，第二个branch为本报表传出参数
     cltno=${ds.data[SEQ_NO]}    cltno为连接接收报表的参数，${ds.data[SEQ_NO]}为本报表的查询结果。
	 
如图简单的URL：
 .. image :: _static/images/bicenter/8.7.1.png
在界面上：
 .. image :: _static/images/bicenter/8.7.2.png
点击可以跳转的区域自动跳转打开所连接的报表。

8.8	标注列表头最小宽度
~~~~~~~~~~~~~~~~~~~~~~~~~~~
在需要控制的列表头单元格中，添加标注::

	{
	
		minWidth:”Nem”
	}

表示N 个字符宽度，其中， N 为任意数字，可为小数。

8.9	其它设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~
可以在 “其它设置”标签页中设置报表显示宽度控制策略和查询操作时是否自动清除缓存。“其它设置”标签页如下：
 .. image :: _static/images/bicenter/8.9.1.png
 
8.9.1	界面控制
...................
报表界面控制中的操作风格可以选择操作区悬浮和操作区固定，操作区悬浮对应我们新版本的显示风格，操作区固定则对应我们老版本的显示风格，缺省情况下，默认为操作区固定。假设我们选择操作区悬浮，界面显示效果：
 .. image :: _static/images/bicenter/8.9.1.1.png
假设我们选择操作区固定，界面显示效果：
 .. image :: _static/images/bicenter/8.9.1.2.png
用户可以根据自己的不同需求对操作风格进行控制，建议都设置为操作区悬浮，保证界面的精致显示。
报表显示宽度控制策略，用于控制报表在屏幕显示时的布局策略，当选择“适应内容”时，报表将按每列的实际宽度布局，两边留白。
界面显示：
 .. image :: _static/images/bicenter/8.9.1.3.png
当选择“适应屏幕宽度”时，报表将填满整个屏幕宽度。界面显示：
 .. image :: _static/images/bicenter/8.9.1.4.png
当报表的列数较少，宽度较小时，选择“适应内容”更美观。
锁定表头选是，界面展示报表时，表头会固定，如果选否，表头则不会固定。

8.9.2	行为控制
...................
在行为控制中，“查询操作时自动清除缓存”，缺省为“否”, 当设置为”是”时，点击报表“查看”按钮时，将自动更新缓存，与“刷新”按钮等同。
注意：查询操作时自动清除缓存设置为“是”时，须确保：1、无并发操作；2、查询较轻。对应查询负荷重的报表，请谨慎使用该设置。
在行为控制中，“无值单元格填充值”只适用于固定行列型报表。
“主动提示时长”，用来控制V3.5老版本的温馨提示显示的时间长短。
“清单型报表导出Excel算法”有两种取值：内容优先和格式优先。当选择内容优先，导出某张清单型报表，打开时，显示效果：
 .. image :: _static/images/bicenter/8.9.2.1.png
当选择格式优先，导出某张清单型报表，打开时，显示效果：
 .. image :: _static/images/bicenter/8.9.2.2.png
导出了预设的交替背景色和格式。但是选择格式优先，导出的文件相对较大，所以，用户可以根据自身的需要设置。
固定型报表和使用内容优先的报表如果服务器jdk版本大于1.6.0_17，导出excel的文件后缀名是.xlsx，如果服务器jdk版本小于1.6.0_17，导出excel的文件后缀名是.xls。

8.10	引用定义
~~~~~~~~~~~~~~~~~~~~~~~~~~~
引用报表通过增加标签页“引用报表定义”实现。如下图所示：
 .. image :: _static/images/bicenter/8.10.1.png
“报表名称”项用于定义表样的文件名。
“报表参数”项用于为访问该报表提供查询条件，该项内容将作为URL字串的一部分，用于查询报表数据，因此，语法为：
key1=value1&key2=value2&…
注意，如果引用表的某参数的参数名与取值与当前报表一致，则可省略。
${ref.报表引用名称[单元格坐标]}。
“引用名称”项用于在表样中使用，
“单元格坐标” 使用Excel的单元格坐标，如： B3、C5 等，例：
 .. image :: _static/images/bicenter/8.10.2.png
格式如下：${ref.yiny[C3]}，其中C3是引用的报表单元格。

第9章	打印控制
---------------------
9.1	打印设置标签页
~~~~~~~~~~~~~~~~~~~~~~~~~~~
通过打印设置标签页，我们可以定义报表的打印（导出到PDF）字体，纸张信息。
 .. image :: _static/images/bicenter/9.1.1.png
调整excel表样上的打印设置页签：
 * 调整字体大小，根据实际情况在打印设置页签，把表头，表内，表尾的字体放大或缩小。
 * 与客户确定好打印纸的纸型，在上图中的“打印规格”上面设置。
 * 设置页边距，常见报表右半边打印不上，把右页边距的值调小。
例:把上图的左右页边距，上下页边距填好。打印时，打印设置页面会自动读出已有设置。打印纸张默认为套打。
 .. image :: _static/images/bicenter/9.1.2.png
用户可以根据自身需要控制打印内容和打印范围。如下：
 .. image :: _static/images/bicenter/9.1.3.png
表示用户只想看到第一行第一列，第一行第四列，第一行第五列，第三行第一列，第三行第四列，第三行第五列的数据。打印效果如下所示：
 .. image :: _static/images/bicenter/9.1.4.png
 注：打印的报表在define标签中尽量定义列表头，以免打印出错。打印出来的每一页都会有列表头。
 
9.2	打印列宽标注
~~~~~~~~~~~~~~~~~~~~~~~~~~~
可通过在左上表头区标注，精确定义打印时报表各列的列宽。
printColWidths：“n单位，n单位，….”
其中，n为数值可为小数，目前支持三种单位和%：pt，cm，em。Pt表示一磅，cm表示厘米，em表示字宽，%表示占页宽的百分比。
规则：每个逗号分隔部分对应一列，在想要精确控制的列上填写指定的值，其余可不填，不填部分，系统会在剩余的页面宽度中平均分配列宽。可指定列宽为0，表示该列隐藏。
例： printColWidths:”,,2em,,10%,,,2.3cm”
 .. image :: _static/images/bicenter/9.2.1.png
上例的含义是：第三列占2个字宽，第五列占10%页宽，第8列占2.3厘米宽，其余各列平分剩下的页面宽度。
如图效果：
 .. image :: _static/images/bicenter/9.2.2.png
 
9.3	各类报表套打标注
~~~~~~~~~~~~~~~~~~~~~~~~~~~
如一张出租车小票上含有如下内容：
 .. image :: _static/images/bicenter/9.3.1.png
要求在上面每一行内容的右边的固定位置打印出详细信息，套打可以实现这样的效果。下面讲解各类报表的套打。

9.3.1	行列固定型报表的套打
................................
介绍固定型报表使用套打。
套打只需指明要打印单元格的打印位置即可，标注如下：
print：“left，top, width, height”
其中：left，top表示打印位置的左上角点位坐标，单位可为：cm，pt，em；width，height为打印区域的宽和高，单位可为：cm，pt，em。
套打区域必须在左上表头和右下单元格的表格范围内，如表后信息是打不出来的。
在套打之前，必须定义“打印设置”标签页，且在该标签页的“打印规格”中必须填写套打。打印控制台上的设置自动读出套打：
 .. image :: _static/images/bicenter/9.3.1.1.png
 例：
在如下的纸张上：
公司
 .. image :: _static/images/bicenter/9.3.1.2.png
 从纸张左上角右移5cm，下移5cm，然后在长5cm，高3个字符的区域内打印“四川裕寰非融资性担保有限公司”。
效果：
 .. image :: _static/images/bicenter/9.3.1.3.png
此图为虚拟打印出来的效果，实际纸张效果可以参照银行的打印凭证
 
9.3.2	清单型报表的套打
................................
清单型报表的套打的定义跟行列固定型报表的套打定义是一样的，只是一般我们不建议使用清单型的套打。可能会出现由于在一个单元格内定义打印标注，而查询出来的结果不止一个，会在同一个区域打印多个内容，造成无法清晰浏览打印出来的内容。如：
在产品名称上做套打标注
 .. image :: _static/images/bicenter/9.3.2.1.png
 当出现多个查询结果时，就会出现全部打印重叠在一起
如果这个单元格只有一个产生结果时，就可以进行套打。
这里有一种特殊的清单型报表时可以套打出来的，就是分组的清单型报表。下面举例说明，在define标签页定义效果如下：
 .. image :: _static/images/bicenter/9.3.2.2.png
 在表头的定义如下：
 .. image :: _static/images/bicenter/9.3.2.3.png
如果在套打时需要打印“xxx公司产品细账”就需要添加套打标注，上面添加的是：
print:"10cm,0cm,1em,0.5cm"，
并且需要将分组的标注添加到这里。如果不添加分组在这里，只添加套打标注，套打时，会出现只有第一个分组打印出“xxx公司产品明帐”。 添加分组的目的就是使这个单元格显示在每一个分组里面。
如下面的标注分别如下：
 .. image :: _static/images/bicenter/9.3.2.4.png
 在产品名称的标注需要注意的是::
 
	printRow:{
            pos:'1.5cm',
            height:'0.5cm'
           }
		   
表示在离纸张上端1.5cm处，高度0.5cm的范围打印这一行。上面标注该行字段的打印范围是为了实现在套打中，这一行能在该位置上被打印出来。
在打印柜员：小明批注需要注意的是：
 .. image :: _static/images/bicenter/9.3.2.5.png
这里的break:'page'必须要与bindTo: "group.data"一起批注，代表打印时从这里开始分页，保证打印出来不会出现半截分页的现象。这里的break:'page'可以用break:'inOnePage'替换，但是也必须与bindTo: "group.data"一起批注。
套打时，在定义的位置显示：打印柜员和打印时间。
根据查询结果，套打时，倘若只想在每页只显示十二条查询结果，并且想把第几页显示到界面上。结合这里的例子讲解实现的步骤：
 * 首先，我们要把Page字段做“前置处理”或者预先存在数据库中，使它能根据查询结果的顺序在套打时显示正确的页码。
在这个例子当中我们把page这个字段放在dbo.Table_Test1这个表里，然后通过sql语句：Update  dbo.Table_Test1 set Page =(ProductID-1)/12+1对Page赋值。
 * 接着，我们用分组聚合函数将数据库中Page值取出来。这里用的是${group.data.AggrFirstRow(Page)}，注意：分组中必须要有分组字段“Page”才能应用这个函数。
需要套打的地方都要填写批注。如下所示：
 .. image :: _static/images/bicenter/9.3.2.6.png
界面显示效果：
 .. image :: _static/images/bicenter/9.3.2.7.png
打印效果：
 .. image :: _static/images/bicenter/9.3.2.8.png

9.3.3	混合型报表的套打
................................
混合型报表的套打是行列固定报表套打和清单型报表套打的综合。在需要套打的单元格上添加套打标注即可。
在8.2.2中的清单型基础上，加入行列固定报表的单元格，如下：
 .. image :: _static/images/bicenter/9.3.3.1.png
增加是否有公司下单这一列，这一列是行列固定型。由于第一列的标注如下
 .. image :: _static/images/bicenter/9.3.3.2.png
有printRow的标注，故行列固定的单元格套打标注可以省略。
界面显示效果：
 .. image :: _static/images/bicenter/9.3.3.3.png
套打效果如下：
 .. image :: _static/images/bicenter/9.3.3.4.png
如果行列固定型单元格在其他地方，则需要添加标注才能套打。如：
 .. image :: _static/images/bicenter/9.3.3.5.png
 .. image :: _static/images/bicenter/9.3.3.6.png
界面显示效果：
 .. image :: _static/images/bicenter/9.3.3.7.png
套打结果显示：
 .. image :: _static/images/bicenter/9.3.3.8.png


第10章	系统重要设置
--------------------------
数据源及报表运行环境由配置文件设置。该文件即是：安装目录\bicenterfin\WEB-INF \jdbcDomain.properties。
该配置文件定义了报表运行过程中所需要的所有信息，包括：
 * 数据源（必须设置）
 * 表样存放地址（必须设置）
 * 缓存存放地址（必须设置）
 * 缓存控制项设置（必须设置）
 * 数据更新时间获取方法设置（可选设置）
 * 日志记录方案设置（可选设置）
 * 预定义维度设置（可选设置）
 * 预定义字典设置（可选设置）
 * 预定义分析工具维度层次（可选设置）
 * 预定义系统变量设置（可选设置）
 * 当前用户信息获取方法设置（可选设置）
 * 配置使用LOG4J记录日志
 * 维度权限设置（可选设置）
 * 统计图序列颜色设置（可选设置）
 * 自定义组件插入设置（可选设置）
下面仔细讲解需要自己配置的信息

10.1	数据源设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~
我们要在配置文件中预先设置好数据源，以便报表获取数据库信息。一般，在jdbcDomain.properties的起始部分（data source setting部分）就是配置数据源的位置。接着，介绍三种常用的数据源配置：
第一种：oracle数据源::

		SW.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
		SW.jdbc.url=jdbc:oracle:thin:@192.168.198.123:1521:sw
		SW.jdbc.username=sw
		SW.jdbc.password=oracle

具体含义见下表：
 .. image :: _static/images/bicenter/tab7.png
 
第二种：sql server数据源::

		JX.jdbc.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
		JX.jdbc.url=jdbc:sqlserver://192.168.198.123:1433;databaseName=SW;SelectMethod=cursor
		JX.jdbc.username=sa
		JX.jdbc.password=123456
		
具体含义与oracle数据源相似，只是数据库的名称在databaseName中设置

第三种：mysql数据源::

		ZZBB.jdbc.driverClassName=org.gjt.mm.mysql.Driver
		ZZBB.jdbc.url=jdbc:mysql://192.168.198.99:3306/tcpdev
		ZZBB.jdbc.username=root
		ZZBB.jdbc.password=123456
		
具体含义与oracle数据库相同。


10.2	表样存放地址/缓存存放地址设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
10.2.1	表样存放路径
...........................
report.base.path=本地盘目录
例::

report.base.path=D:/FMT/rptdef5/tmpls  所有的表样都放在tmpls下面。
 -- 注：* 表样的存放目录不宜太深，如tmpls下可以再有一层文件夹。
		* 表样目录和下节的缓存目录必须放在应用外。
		* 在配置目录下的tmpls下面可以有子目录。

10.2.2	缓存存放路径
...........................
cache.report.path=本地盘目录
例::

		cache.report.path=D:/FMT/rptdef5/tmp  访问报表后会自动在tmp文件夹下缓存报表信息。

10.2.3	表样打包说明
...........................
表样打包的意思是可以把我们的表样分成多个部分存放在不同的目录下，只要写明路径就可以。
一．首先运行下到应用包目录的lib文件夹下。例::

		D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>

二．目前有四个可用的命令
 * 表样编译：是把以前存放目录下的表样全部预先编译一次，这样在界面上打开报表时所花的解析表样时间更短。注意会自动为每个表样生成一个后缀为obj的文件。说明::

     compile all report template files under a file folder:
     java -jar bicenter.jar -compile full-path-of-the-folder	 
	 例:
	 D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -compile D:\FMT\rptdef5\tmpls

 * 打包：是把某目录下的表样全部打包，变为一个文件，形成表样库，以便有多个表样库可以同时使用。注意后缀为brp。说明::

	put all report template files under a file folder into a package:
	java -jar bicenter.jar -pack full-path-of-the-folder the-package-name	
	例:
	 D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -pack D:\FMT\rptdef5\tmpls D:\FMT\demo.brp

 * 包反编译为文件：把包内的文件解压出来，以便修改表样。说明::

    unpack all report template files from a package into a file folder:
    java -jar bicenter.jar -unpack the-package-name full-path-of-the-folder
	例:
	D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -unpack D:\FMT\demo.brp D:\FMT\tmpls1

 * 把原来的包重新打一次：也许发版本后需要把原来的包重新打包一次。说明::

     repack all report template files in a package into a new package:
     java -jar bicenter.jar -repack the-source-package-name the-new-package-name	 
	 例:
	 D:\ruanjiananzhuang\Tomcat 6.0\webapps\bicenterfin5\WEB-INF\lib>java -jar bicenter.jar -repack D:\FMT\demo.brp d:\demo.brp

三．表样库使用
.. 在jdbcDomain.properties文件内::

		##################################
		#report template home setting
		##################################
		report.base.path=D:/FMT/rptdef5/tmpls    -------这是原来的表样存放路径
		zhuxl.report.lib=D:/FMT/demo.brp         -------这是使用表样库的路径
		。。。。。。。。。                       -------多个库都这样写下来

四．报表引用时::

		http://localhost:8080/bicenterfin5/RegularReport?_type=zhuxl/mswgd.xls&_code=汉语      ---------在表样名前加上库的名字

10.2.4	多配置方法
.............................
现在支持多个jdbcDomain.properties配置文件。下面具体介绍配置方法。
 * 使用原来老的方式，表样文件放入tmpls文件夹下，安装目录\WEB-INF\jdbcDomain.properties下配置数据源，hierarchy，全局变量等信息。
 * 如果需要把表样文件分成多分，每一个大的分类使用不同的数据源，全局变量，rundate等信息时（如金融T+0和T+1的区别）。可以采用以下配置方法，直接使用文件夹的方式（XX.lib）
	* 如在服务器表样目录建立文件夹名------如sw.lib。
	* 这里面存放N个表样。
	* 这些表样使用的数据源，全局变量，rundate等信息放在和excel表样平级的jdbcDomain.properties内。
	* 把这个目录信息配置到总的安装目录\WEB-INF\jdbcDomain.properties下。
例：目录结构
 .. image :: _static/images/bicenter/10.2.4.1.png
这个jdbcDomain.properties存放的是sw.lib目录下所有表样的配置信息::

	##############################
	#data source setting
	##############################
	SW.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
	SW.jdbc.url=jdbc:oracle:thin:@10.126.3.96:1521:sw
	SW.jdbc.username=sw
	SW.jdbc.password=oracle
	##################################
	#hierarchy define
	##################################
	shuiwujigou.hierarchy.datasource=SW
	shuiwujigou.hierarchy.store.type=flat.table
	shuiwujigou.hierarchy.cache.durance=1H
	shuiwujigou.hierarchy.table.name=dim_dm_hy
	shuiwujigou.hierarchy.access.control=no
	#yes no 
	shuiwujigou.hierarchy.level.name=产业,行业,三级机构
	shuiwujigou.hierarchy.level.member.id=cy_dm,hyml_dm,hy_dm
	shuiwujigou.hierarchy.level.member.name=cy_dm,hyml_dm,hy_dm
	##################################
	#system variable define
	###################################
	customer.var.value=未注册用户猪猪sw
	####################################
	#rundate setting
	####################################
	#for fsd
	rundate.datasource=SW
	#I just know one column query, and only fetch the first row from result
	rundate.sql=select original.TM1 from (SELECT rownum no,TM1 FROM ftime) original where original.no = 2
	#if the field data type is String, then tell me it's format
	rundate.format=yyyyMMdd

目录结构2
 .. image :: _static/images/bicenter/10.2.4.2.png 
在msw.lib下的jdbcDomain.properties存放的是msw.lib目录下所有表样的配置信息::

	##############################
	#data source setting
	##############################
	SW.jdbc.driverClassName=oracle.jdbc.driver.OracleDriver
	SW.jdbc.url=jdbc:oracle:thin:@10.126.3.96:1521:sw
	SW.jdbc.username=sw
	SW.jdbc.password=oracle
	##################################
	#hierarchy define
	##################################
	shuiwujigou.hierarchy.datasource=SW
	shuiwujigou.hierarchy.store.type=flat.table
	shuiwujigou.hierarchy.cache.durance=1H
	shuiwujigou.hierarchy.table.name=dim_dm_hy
	shuiwujigou.hierarchy.access.control=no
	#yes no 
	shuiwujigou.hierarchy.level.name=产业,行业,三级机构
	shuiwujigou.hierarchy.level.member.id=cy_dm,hyml_dm,hy_dm
	shuiwujigou.hierarchy.level.member.name=cy_dm,hyml_dm,hy_dm
	##################################
	#system variable define
	###################################
	customer.var.value=未注册用户猪猪msw
	swb.brp和mswb.brp是用表样打包的方法，内含各自的jdbcDomain.properties，同上。
	表样配置好后，在全局的jdbcDomain.properties里配置上面的几个目录。
	##################################
	#report template home setting
	##################################
	report.base.path=D:/FMT/rptdef5/tmpls --------  原来的存放路径方式
	zhuxl.report.lib=D:/FMT/rptdef5/demo.brp ------报表库
	SWL.report.lib=D:/FMT/rptdef5/sw.lib -------文件夹MSWL.report.lib=D:/FMT/rptdef5/msw.lib
	SWB.report.lib=D:/FMT/rptdef5/swb.brp -------MSWB.report.lib=D:/FMT/rptdef5/mswb.brp   
	#########################################
	#cache setting
	#########################################
	cache.report.path=D:/FMT/rptdef5/tmp

.. image :: _static/images/bicenter/10.2.4.3.png
 
url访问文件夹形式::

		http://localhost:8080/bicenterfin5/RegularReport?_type=swl/sw1.xls&_code=汉语
		
报表库形式::

		http://localhost:8080/bicenterfin5/RegularReport?_type=swb/sw1.xls&_code=汉语

不管打包形式还是文件夹形式，都是在表名前加上位置一定的路径即可

10.3	数据更新时间获取方法设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
当前数据更新时间来自业务数据库，需要通过配置告诉程序如何提取,语法如下::

		rundate.datasource=数据源（第一步配置的数据源名称）
		rundate.sql=SQL查询语句（要求仅返回一列）
		rundate.format=日期字符串的格式
		
日期字符串格式规范y表示年，M（大写）表示月，d表示日，示例如下::
 
		yyyyMMdd ： 20110101   2011年1月1日
		yyyy-MM-dd :   2011-01-01 2011年1月1日

例::   

		rundate.datasource=fin
		rundate.sql=select SYS_RUN_DATE from FIN_SYSTEM 
		rundate.format=yyyyMMdd

10.4	日志记录方案设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
日志级别用于控制程序运行时输出到控制台的信息。
日志级别由大到小如下排列：off(不输出日志信息), error（输出错误信息）, warn（输出警告及错误信息）, info(输出通知、警告及错误信息), debug(输出调试、通知、警告及错误信息), all(输出所有信息) 
配置日志级别须修改jdbcDomain.properties文件，语法如下：
log.verbose=日志级别
如果不配置该项，缺省日志级别为：info
 
 .. _dictionary:
10.5	预定义字典设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
预定义字典设置定义了一个表中键值与其它值的对应关系，使用时可通过键值，获得相应的其它值，配置语法如下::

		字典名称.dictionary.datasource=数据源（配置数据源名称）
		字典名称.dictionary.store.type=table（目前仅支持对数据库的表进行配置）
		#flat table xml sql
		字典名称.dictionary.table.name= sql 查询语句（通过sql语句，取出需要的字段，支持用select * from table的形式取出表中所有的字段）
		字典名称.dictionary.key.field=字段名（键值所在字段名）
		字典名称.dictionary.name.field=字段名（名称所在字段名）
		字典名称.dictionary.caption.pattern={id} - {name}（显示名称的模式）
		字典名称.cache.durance=1H（缓存时长）
		如：sjhy.dictionary.datasource=MSW
		sjhy.dictionary.store.type=table
		#flat table xml sql
		sjhy.dictionary.table.name=select * from DIM_DM_HY
		sjhy.dictionary.key.field=HY_DM
		sjhy.dictionary.name.field=HY_MC
		sjhy.dictionary.caption.pattern={id} - {name}
		sjhy.cache.durance=1H

配置好的字典，在报表定义中有两种用途：
其一，可通过语法： ${dic.字典名称[id][字段名]} 获取其值。
上式的具体含义详情参见下表：
 .. image :: _static/images/bicenter/tab8.png

如：${dic.sjhy[ds.SK.HY_DM][CY_MC]}，表示通过预定义数据字典sjhy取CY_MC字段，该字段对应于SK查询的HY_DM字段。
    ${dic.sjhy[ds.SK.HY_DM]}，表示通过预定义数据字典sjhy取出HY_MC字段，该字段对应于SK查询的HY_DM字段。
其二，在查询条件中，可以为选择控件提供取值，在“数据范围”一栏以：dictionary（字典名称）格式定义即可。当作为选择控件时，缺省情况下，显示值默认为 “名称所在字段”，实际值默认为“键值所在字段”。如：
 .. image :: _static/images/bicenter/10.5.1.png
但有些情况下，可能需要显示更多信息，这是就需要使用“显示名称的模式”配置项来定义，该项使用{id} 、{nam}作为占位符，{id}对应“键值所在字段”的值，{name}对应“名称所在字段”的值，显示时，控件将用实际值替代这两个占位符。如：
 sjhy.dictionary.caption.pattern=这是显示值：{name}

10.6	预定义系统变量设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
系统参数是全局可用的变量，可在仍何需要的地方通过${var.变量名}引用。其配置语法如下：
变量名.var.value=变量值
报表引用时，直接以格式：${var.变量名}引用即可。如：
配置文件中配置系统参数：customer.var.value=未注册用户猪猪
在报表中直接以：${var.customer}格式引用即可


10.7	当前用户信息获取方法设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 需定义如下两个必须的配置项：
第一个配置：userid.pass.method : request/session， 若设为request 表示从http请求参数中取用户id，若设为session表示从http session变量中取用户id。
第二个配置：userid.pass.key：设置用户ID的 http请求参数名或session属性名
username.pass.key: 配置用户显示名的 http请求参数名或session属性名，可省略
例::
     配置如下:
	 userid.pass.method=request
     userid.pass.key=uid

倘若用户通过url: http://localhost/bicenterfin/report?type=xxx&uid=liuxjg访问报表，则该配置指示程序从http request中取参数uid的值“liuxjg“作为用户ID。
有的，应用程序使用session中的一个javaBean来存储用户信息，这就需要配置javaBean的信息::

		userid.session.bean=java类全名
		userid.session.bean.id.method=获取用户Id的方法名， 如：getId()
		userid.session.bean.name.method=获取用户显示名称的方法名， 如：getName()
		如：
		userid.session.bean=com.datawise.opencrud.web.logon.UserSession
		userid.session.bean.id.method=getUsername()
		userid.session.bean.name.method=getName()

10.8	配置使用LOG4J记录日志
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
添加如下配置项，同时将 log4j.properties 配置文件放在jdbcDomain.properties的同一目录下。然后打开log4j.properties文件，文件中有：
log4j.appender.f.File=bicenter.info.log
等号后面配置bicenter.info.log存放的路径。
如::
		log4j.appender.f.File=f:/bicenter.log/bicenter.info.log
	
表示生成的记录日志文件bicenter.info.log存放在f盘bicenter.log文件夹下。

.. _color:

10.9	统计图序列颜色设置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在jdbcDomain.properties文件的直接以格式：色系名称.color = 背景色，色1，色2，色3 ...定义。如::

      dc.color=#ffffff,#ffe749,#bac53b,#ff914c,#45eeee,#f04a4a,#ff49f5,#49fa8c,#70bcf9,#8070f9
      zz.color=#ffffff,#cccc33,#db7a7a,#b6db7a,ffee75
      ll.color=#ffffff,#00ffff,#00ff36,#ff7500,e9f704

假设报表定义的chart标签页需要引用定义的色系名称，直接在色系一行中填上预定义的色系名称即可，如（dc,zz，ll）。

10.10	Tomcat安装及访问路径
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * 将bicenterfin包部署到应用服务器下(TomcatHome/webapps)。
 * 启动应用服务器。
 * 网页访问http://ip:port/bicenterfin

10.11	集成报表URL引用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
* 启动应用服务器，浏览器访问：http://ip:port/bicenterfin安装无误时，可以显示tmpls下所有报表。
 .. image :: _static/images/bicenter/10.11.1.png
* 直接通过URL看某张报表在BI-CENTER中支持用url直接访问报表。用户可以根据自身需要，遵循如下规则得到自己想要的效果。
* 在显示界面中：显示录入条件区，报表内容空白，待点击查看报表后方才显示报表内容，则用如下url访问即可：http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名,例::

		http://10.6.10.213:8080/bicenterfin/RegularReport?type=mswqing2.xls

* 在显示界面中：显示录入条件区，并直接显示按缺省条件值查询出的报表相应的内容，则用如下url访问即可:http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名报表& 参数1=值&报表参数2=值...&_aal=queryreport这里的_aal=queryreport必须要加在url后面，不然只会显示录入条件区，不会显示报表内容。例::

		http://10.6.10.213:8080/bicenterfin/RegularReport?type=mswqing2.xls&day=200601&_aal=queryreport

* 在显示界面中：不显示录入条件区，直接显示报表内容，则用如下url访问即可：http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&报表参数1=值&报表参数2=值...&op=view例::

		http://10.6.10.213:8080/bicenterfin/RegularReport?type=mswqing2.xls&day=200601&op=view

条件录入区没有显示。如果录入条件区有必输的文本框或者必选控件时，要将必输项的参数全部赋值，不然会报错。如果事先不知道报表的参数情况，不推荐使用该方法。
* 在显示界面中：隐藏查询条件选择区，点击确定后方才显示数据，用如下url访问：http://服务器及端口/bicenterfin/RegularReport?_type=表样文件名&报表参数1=值&报表参数2=值... &_hi=true，例::

		http://10.6.10.213:8080/bicenterfin/RegularReport?type=mswqing2.xls&day=200601&_hi=true

如果录入条件区有必输的文本框或者必选控件时，点击确定后会弹出一个提示框提示某个参数为必输项。例::

		http://10.6.10.213:8080/bicenterfin/RegularReport?type=mswqingdanguding.xls&day=20060302&_hi=true
	
* 报表有图形时，只显示图形用如下url访问:http://服务器及端口/bicenterfin/Chart?_type=表样文件名。例::

		http://10.6.10.213:8080/bicenterfin/Chart?type=nw_book_qingdan1.xls&day=19961001

需要注意的是：在url传参的过程中，如果条件控件为单选，变量名=value或变量名=(value)都可以；如果条件控件为多选，变量名=(value)。因为单选不可能会同名，多选不同层次的成员有可能会出现同名现象。例::

	单选时：http://10.6.10.213:8080/bicenterfin/RegularReport?_type=msw/mswduoxuan.xls&_code=汉语&day=200608&swhy=1400 
	多选时：http://10.6.10.213:8080/bicenterfin/RegularReport?_type=msw/mswduoxuan.xls&_code=汉语&day=200608&swhy= (1400),(1500)

* 如果是嵌入其他系统使用的，使用安全代理后的URL，安全代理使用方法参照安装部署手册。如::

		http:// ip:port /OtherApp/bicenterfin/RegularReport?_type=nw.xls

* 查看本系统的license信息::
 
		http://ip:port/bicenterfin/RegularReport?op=license
 
* 查看最新版本新增修改的功能点说明::
  
		http:// ip:port /bicenterfin/RegularReport?op=releaseNotes

* 配置文件自检url::
 
		http:// ip:port /bicenterfin/RegularReport?op=config
	
第11章	授权
--------------------
11.1	试用版本
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在使用bicenterfin试用版本期间，没有使用代理时，可以在页面直接查看License信息::

		http://ip:port/bicenterfin/RegularReport?op=license

获得页面“授权”信息：
 .. image :: _static/images/bicenter/11.1.1.png
 
11.2	正式版本
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
用户在使用过程中，如果需要更换为正式版本，可以把上图的宿主机信息记录下来返回给BI-CENTER项目组开发人员，由开发人员根据用户服务器的具体情况产生正式License。
开发人员会返回用户一个user.dc的文件，用户替换试用版本bicenterfin/WEB-INF目录下的user.dc。

11.3	作为jar包，内嵌入其它应用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在这种情况下，如果应用为FINTELLIGEN，操作如下：
需要在应用里挂一个菜单，然后和其他访问报表的url一样，只是后半部分换为/RegularReport?op=license
菜单打开后也将显示宿主机的特征信息， 如上试用版license图。
需要注意的是：如果使用负载均衡，要在负载均衡后，对每台应用服务器作上述操作。
将获得的特征信息拷贝到文本文件中，注意注明与每台机器的对应关系。
注：服务器的JDK版本为1.6以上才能读出全部信息，如1.5版本只有部分信息。

11.4	公司内部申请正式lisence
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * 进入神州信息的主页http://home.dcits.com
 * 协同办公平台——流程审批系统-软件研发网——流程申请——license申请
 * 填写申请信息，把上面所采集的机器信息拷贝到备注栏，或用附件形式添加。
 * 提交申请后等待审核。
 * 申请通过后，BI-CENTER开发人员会返回用户一个user.dc的文件，用户替换试用版本XXXX/WEB-INF目录下的user.dc。
 * 替换完成后，清除应用服务器缓存，重启服务，在上面“取机器信息”的页面重新查看License信息，没有截止日期即成功。

第12章	常见问题及使用技巧
---------------------------
 * 屏幕显示（或打印、导出PDF）时，个别框线缺失。尽量使用Excel的田字框线工具画框线。
 * 使用Excel的拖拽复制功能后，有可能使有的单元格标注信息不生效。使用拖拽复制功能后，程序无法读出复制到的单元格的标注信息，最好不使用拖拽复制功能避免。
 * 在查询定义中编写SQL语句时，最好使用本地编辑器确定语句是正确的，然后再复制到EXCEL里。因为如使用远程终端复制过来的SQL语句，有可能把回车转为乱字符，而在EXCEL中是看不到这个字符。
 * Microsoft SQL Sever中的数据类型real在查询条件里面作数据转换时暂不支持，建议尽量使用numeric(n,m) 数据类型。
 * 在“查询定义”页签的SQL语句结束时不需要使用“；”。
 * 行表头和列表头不能为空，否则有时会提示查询错误。可以使用转义字符填充数据。
 * 在使用rundate的时候，从数据库查出来的数据只有一个值，且需转换成日期格式或字符串格式，其他格式不支持。
 * 清单型表由两张表组成，导出EXCEL时，只能一张一张的导出。不能两张一起导出到一个文件。
 * 一张报表由多个section组成，导出PDF，后面section的表头可能因为左上表头定义不同而没有，可以在第一个section下加一个空行。
 * 在使用导出EXCEL的功能，最大数值精度为千万亿加小数点后面两位，超出这个范围导出的数据小数可能有出入。
 * 用户在使用BI-CENTER自由报表工具过程中，如果需要换新版本或正式license，请先删除应用服务器上的缓存，以免造成不必要的错误。
 * 查询条件的值最好不要包含“（）”，会提示此查询条件含有攻击代码的错误。
 * 表样文件目录务必配置到应用外，否则，将导致weblogic等应用服务器，将缓存文件作为资源，最终造成上线后，运行、启动越来越慢，严重时启动耗时达数小时之久。
 * 如果表样用的mysql数据库，需要先将mysql的my.ini文件中的default-character-set全部设为utf8

